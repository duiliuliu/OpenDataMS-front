{"version":3,"sources":["assets/icon sync /^/.*/.*$","assets/icon/Simplespider.ico","assets/icon/clock.svg","assets/icon/database.svg","assets/icon/interesting.gif","assets/icon/interesting2.gif","assets/icon/new.svg","assets/icon/process.svg","assets/icon/spider.svg","assets/icon/user.svg","assets/icon/userHeader/不屑.svg","assets/icon/userHeader/卖萌.svg","assets/icon/userHeader/可爱.svg","assets/icon/userHeader/吃货 (1).svg","assets/icon/userHeader/吃货.svg","assets/icon/userHeader/呆滞.svg","assets/icon/userHeader/坏笑.svg","assets/icon/userHeader/大哭 (1).svg","assets/icon/userHeader/大哭.svg","assets/icon/userHeader/头晕.svg","assets/icon/userHeader/害怕.svg","assets/icon/userHeader/开心 (1).svg","assets/icon/userHeader/开心.svg","assets/icon/userHeader/微笑.svg","assets/icon/userHeader/惊喜.svg","assets/icon/userHeader/愤怒.svg","assets/icon/userHeader/无语.svg","assets/icon/userHeader/石化.svg","assets/icon/userHeader/耍帅.svg","assets/icon/userHeader/自恋.svg","assets/icon/userHeader/花痴.svg","webpack:///./src/assets/style/App.less?4694","assets/style/App.less","assets/style/index.css","assets/style/icon.css","assets/style/job/index.css","assets/style/job/currentJob/index.css","assets/style/job/managerJob/index.css","assets/style/datamanager.css","assets/style/functionmanager.css","constants/ActionConstants.js","redux/reducers/index.js","redux/reducers/NewCollectJobReducers.js","redux/reducers/NewCleanJobReducers.js","redux/reducers/ManagerJobReducers.js","redux/reducers/ManagerDataReducers.js","redux/reducers/ManagerUserReducers.js","redux/reducers/ManagerFunctionReducers.js","redux/reducers/JobReducers.js","redux/reducer.js","constants/ApiConstants.js","api/Api.js","redux/actions/index.js","redux/sagas/index.js","redux/sagas/NewCollectJobSagas.js","redux/actions/NewCollectJobActions.js","redux/actions/NewCleanJobActions.js","redux/sagas/NewCleanJobSagas.js","redux/actions/ManagerJobActions.js","redux/sagas/ManagerJobSagas.js","redux/actions/ManagerDataActions.js","redux/sagas/ManagerDataSagas.js","redux/actions/ManagerUserActions.js","redux/sagas/ManagerUserSagas.js","redux/actions/ManagerFunctionActions.js","redux/sagas/ManagerFunctionSagas.js","redux/actions/JobActions.js","redux/sagas/JobSagas.js","redux/sagas.js","constants/routerConstants.js","components/job/newJob/JobTab.jsx","constants/JobConstants.js","constants/EnumConstants.js","util/StringUtil.js","util/ListUtil.js","components/job/newJob/NewCleanJob.jsx","containers/job/NewCleanJob.jsx","components/job/newJob/NewCollectJob.jsx","containers/job/NewCollectJob.jsx","containers/job/NewJob.jsx","constants/ImageConstants.js","components/icons/NativeIcon.jsx","components/job/StatusTab.jsx","components/job/message/BaseMessage.jsx","components/job/message/InfoMessage.jsx","components/job/message/SuccessMessage.jsx","components/job/message/FailedMessage.jsx","components/job/jobPage/MessageWindow.jsx","components/job/jobPage/Job.jsx","containers/job/Job.jsx","components/user/User.jsx","components/data/Data.jsx","components/function/Function.jsx","components/job/managerJob/JobList.jsx","components/icons/NumberIcon.jsx","components/job/managerJob/ManagerJob.jsx","containers/job/ManagerJob.jsx","components/function/RegisteFunction.jsx","containers/function/RegisteFunction.jsx","redux/actions/RegisteFunctionActions.js","components/function/ManagerFunction.jsx","containers/function/ManagerFunction.jsx","components/data/ManagerData.jsx","containers/data/ManagerData.jsx","components/user/ManagerUser.jsx","router/routerData.js","containers/user/ManagerUser.jsx","components/Exception/NotFoundPage.jsx","router/index.js","components/layout/PageHeader.jsx","components/layout/PageFooter.jsx","components/layout/SideBar.jsx","components/layout/MyBreadcrumb.jsx","containers/layout/Layout.jsx","components/login/Login.jsx","App.js","redux/store.js"],"names":["map","./Simplespider.ico","./clock.svg","./database.svg","./interesting.gif","./interesting2.gif","./new.svg","./process.svg","./spider.svg","./user.svg","./userHeader/不屑.svg","./userHeader/卖萌.svg","./userHeader/可爱.svg","./userHeader/吃货 (1).svg","./userHeader/吃货.svg","./userHeader/呆滞.svg","./userHeader/坏笑.svg","./userHeader/大哭 (1).svg","./userHeader/大哭.svg","./userHeader/头晕.svg","./userHeader/害怕.svg","./userHeader/开心 (1).svg","./userHeader/开心.svg","./userHeader/微笑.svg","./userHeader/惊喜.svg","./userHeader/愤怒.svg","./userHeader/无语.svg","./userHeader/石化.svg","./userHeader/耍帅.svg","./userHeader/自恋.svg","./userHeader/花痴.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","content","i","options","hmr","transform","insertInto","undefined","locals","push","REQUEST_JOB","REQUEST_COLLECT_CITY_LIST","REQUEST_COLLECT_DATA_LIST","REQUEST_CLEAN_CITY_LIST","REQUEST_CLEAN_DATA_LIST","REQUEST_FUNCTION_LIST","REQUEST_DATA_COL_LIST","SUBMIT_COLLECT_JOB","SUBMIT_CLEAN_JOB","REQUEST_JOB_LIST","REQUEST_TREE_DATA","REQUEST_USER_DATA","REQUEST_FUNCTION_DATA","initialState","message","success","collectCityList","collectDataList","collectCityStatus","collectDataStatus","cleanCityList","cleanDataList","functionList","dataColList","cleanCityStatus","cleanDataStatus","functionStatus","dataColStatus","jobList","countList","loadStatus","treeData","name","userData","functionData","job","created","creator","photo","messages","status","allReducers","Reducer","state","arguments","length","action","type","objectSpread","payload","NewCleanJobReducers","NewCollectJobReducers","ManagerJobReducers","ManagerDataReducers","ManagerUserReducers","ManagerFunctionReducers","JobReducers","data","concat","rootReducer","combineReducers","API","JOB_API","DATA_API","DATA_CITY_CPI","DATA_COL_CPI","USER_API","FUNCTION_API","headers","user-agent","content-type","checkStatus","response","error","statusText","transParamsToUrl","url","params","paramsArray","forEach","key","search","join","putData","fetch","body","method","credentials","mode","redirect","referrer","then","json","getData","successAsync","errorAsync","clearMessage","regenerator_default","a","wrap","_context","prev","next","put","delay","stop","_marked","_context2","_marked2","requestCollectCityListAsync","requestCollectDataListAsync","submitCollectJobAsync","watchCollectJob","loadCollectCityList","loadCollectDataList","fetchCollectCityList","fetchCollectDataList","_response","call","bind","this","sent","t0","console","log","NewCollectJobSagas_marked","_response2","city","NewCollectJobSagas_marked2","_context3","fork","_marked3","_context4","takeLatest","ActionConstants","_marked4","requestCleanCityListAsync","requestCleanDataListAsync","requestFunctionListAsync","requestDataColListAsync","submitCleanJobAsync","watchCleanJob","loadCleanCityList","loadCleanDataList","loadFunctionList","loadDataColList","fetchCleanCityList","fetchCleanDataList","fetchFunctionList","fetchDataColList","NewCleanJobSagas_marked","NewCleanJobSagas_marked2","_response3","NewCleanJobSagas_marked3","_response4","datas","佛山","贵州","NewCleanJobSagas_marked4","_context5","_marked5","_context6","_marked6","requestJobListAsync","watchJobList","loadJobList","fetchJobList","param","completed","All","Pending","Runing","Finished","ManagerJobSagas_marked","ManagerJobSagas_marked2","requestTreeDataAsync","watchTreeData","loadTreeData","fetchTreeData","ManagerDataSagas_marked","ManagerDataSagas_marked2","requestUserDataAsync","watchUserList","fetchUserData","loadUserData","arr","Array","fill","role","info","ManagerUserSagas_marked","ManagerUserSagas_marked2","requestFunctionDataAsync","watchFunctionData","loadFunctionData","fetchFunctionData","functionName","lastModifier","lastModified","resource","tags","ManagerFunctionSagas_marked","ManagerFunctionSagas_marked2","loadJob","fetchJob","requestJobAsync","watchJob","jobName","ApiConstants","moment","format","text","JobSagas_marked","JobSagas_marked2","root","all","sagas_marked","ALIAS","USER","JOB","ICON","TabPane","tabs","JobTab","react_default","createElement","className","defaultActiveKey","tab","icon","props","pane_1","pane_2","Component","Validating","WARN","SUCCESS","VALIDATE","ERROR","NON","freeze","isBlank","str","ch","isEmpty","list","Option","OptGroup","NewCleanJob","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleNameChange","setState","target","value","handleCityChange","StringUtil","cityStatus","requestDataList","handleDataChange","requestDataColList","dataStatus","handlefunctionChange","function","handleDataColChange","dataCols","dataColsStatus","handleCheckString","defineProperty","handleCheckList","ListUtil","handleSubmit","preventDefault","submitJob","thread","isSaveNative","handleReset","requestCityList","requestFunctionList","es_message","dataColOptions","optGroups","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","item","err","return","label","formItemLayout","labelCol","span","wrapperCol","es_form","onSubmit","Item","assign","input","onChange","placeholder","hasFeedback","validateStatus","es_select","cityList","offset","dataList","es_button","htmlType","style","margin","onClick","React","defaultProps","download","connect","succenninfo","dispatch","NewCleanJobActions","NewCollectJob","datasStatus","handleThreadChange","handleNativeChange","saveOrigin","NewCollectJob_Option","es_radio","Group","input_number","defaultValue","max","min","row","col","md","sm","xl","xs","es_switch","marginRight","marginLeft","upload","listType","NewCollectJobActions","requestDownloadPath","path","NewJob","JobTab_JobTab","job_NewCollectJob","job_NewCleanJob","requireContext","require","IconTypesMap","match","NativeIcon","alt","src","width","height","statusStyle","pending","finished","running","failed","StatusTab","handleClick","history","_this$props","underLine","divider","routerConstants","tag","color","isDetail","avatar","size","NativeIcon_NativeIcon","withRouter","BaseMessage","prefix","InfoMessage","BaseMessage_BaseMessage","SuccessMessage","FailedMessage","MessageWindow","index","SuccessMessage_SuccessMessage","FailedMessage_FailedMessage","InfoMessage_InfoMessage","CurrentJob","requestJob","spin","spinning","job_StatusTab","MessageWindow_MessageWindow","ActionContants","Job","User","_ref","userName","Data","Function","tabSize","LeftWrapper","JobList","document","offsetWidth","onWindowResize","assertThisInitialized","window","addEventListener","removeEventListener","_this2","empty","pagination","defaultCurrent","pageSize","total","totalJob","NumberIcon","number","ManagerJob","handerTab","requestJobList","page","ManagerJob_TabPane","NumberIcon_NumberIcon","JobList_JobList","ManagerJobActions","FunctionRegister","handleCoverSource","isCoverSource","handleUpload","file","handleFunctionInput","handleSourceInput","sourceName","submitFunction","source","functionNameStatus","sourceNameStatus","sourceStatus","Dragger","functionObj","RegisteFunctionActions","RegisteFunction","Search","FunctionManager","showModal","modalVisible","columns","title","dataIndex","render","user","ghost","currentFunc","requestFunctionData","onSearch","table","dataSource","modal","footer","maskClosable","onCancel","visible","ManagerFunction","DirectoryTree","tree","TreeNode","DataManager","onExpand","activeKey","onEdit","targetKey","add","node","isLeaf","panes","pane","openPanes","indexOf","remove","lastIndex","filter","pop","newTabIndex","requestTreeData","subNode","TreeMap","hideAdd","ManagerData_TabPane","closable","autoExpandParent","multiple","onSelect","ActionsConstant","ManagerData","ManagerUser","requestUserData","filters","onFilter","record","defaultSortOrder","sorter","b","loading","onOk","sidebarRouterData","component","children","dashboard","routerData","NotFoundPage","Exception_default","backText","desc","getRouterComponent","items","compontents","element","hasOwnProperty","from","Set","sidebarRouterComponents","otherRouterComponents","AppRouter","Switch","Route","exact","Redirect","to","PagesHeader","msgCount","NoticeIcon_default","count","PageHeader_default","logo","PageFooter","links","href","blankTarget","copyright","overflow","GlobalFooter_default","Sider","SubMenu","Sidebar","componentDidMount","setDefaultActiveItem","pathname","location","childitem","openKeys","selectedKeys","collapsed","SideTree","menuItem","Link","breakpoint","menu","borderRight","subMenuOpenDelay","theme","MyBreadcrumb","setDefaultActivePath","split","MyBreadcrumb_Item","breadcrumb","textAlign","Content","MyLayout","resize","toggleCollapsed","BrowserRouter","layout","PageHeader_PagesHeader","SideBar","onCollapsed","padding","layout_MyBreadcrumb","background","minHeight","router_AppRouter","PageFooter_PageFooter","contextTypes","router","PropTypes","object","Tab","Login","UserName","Password","Mobile","Captcha","Submit","MyLogin","notice","autoLogin","values","username","password","setTimeout","onTabChange","changeAutoLogin","checked","Login_default","es_alert","showIcon","marginBottom","onGetCaptcha","es_checkbox","float","store","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","createLogger","runSaga","run","close","END","configureStore","__INITIAL_STATE__","rootSaga","App","es","Layout","ReactDOM","App_App","getElementById"],"mappings":"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","file":"static/js/main.fb7b26ea.chunk.js","sourcesContent":["var map = {\n\t\"./Simplespider.ico\": 516,\n\t\"./clock.svg\": 517,\n\t\"./database.svg\": 518,\n\t\"./interesting.gif\": 519,\n\t\"./interesting2.gif\": 520,\n\t\"./new.svg\": 521,\n\t\"./process.svg\": 522,\n\t\"./spider.svg\": 523,\n\t\"./user.svg\": 524,\n\t\"./userHeader/不屑.svg\": 525,\n\t\"./userHeader/卖萌.svg\": 526,\n\t\"./userHeader/可爱.svg\": 527,\n\t\"./userHeader/吃货 (1).svg\": 528,\n\t\"./userHeader/吃货.svg\": 529,\n\t\"./userHeader/呆滞.svg\": 530,\n\t\"./userHeader/坏笑.svg\": 531,\n\t\"./userHeader/大哭 (1).svg\": 532,\n\t\"./userHeader/大哭.svg\": 533,\n\t\"./userHeader/头晕.svg\": 534,\n\t\"./userHeader/害怕.svg\": 535,\n\t\"./userHeader/开心 (1).svg\": 536,\n\t\"./userHeader/开心.svg\": 537,\n\t\"./userHeader/微笑.svg\": 538,\n\t\"./userHeader/惊喜.svg\": 539,\n\t\"./userHeader/愤怒.svg\": 540,\n\t\"./userHeader/无语.svg\": 541,\n\t\"./userHeader/石化.svg\": 542,\n\t\"./userHeader/耍帅.svg\": 543,\n\t\"./userHeader/自恋.svg\": 544,\n\t\"./userHeader/花痴.svg\": 545\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 515;","module.exports = __webpack_public_path__ + \"static/media/Simplespider.b913ae9e.ico\";","module.exports = __webpack_public_path__ + \"static/media/clock.217b151d.svg\";","module.exports = __webpack_public_path__ + \"static/media/database.600b18cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/interesting.6cf0f25b.gif\";","module.exports = __webpack_public_path__ + \"static/media/interesting2.1f8ef8eb.gif\";","module.exports = __webpack_public_path__ + \"static/media/new.e84093b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/process.49ce68ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider.104fff7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.5d2675bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/不屑.06778847.svg\";","module.exports = __webpack_public_path__ + \"static/media/卖萌.5774351a.svg\";","module.exports = __webpack_public_path__ + \"static/media/可爱.c30876d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/吃货 (1).dbcf4ac5.svg\";","module.exports = __webpack_public_path__ + \"static/media/吃货.7817e920.svg\";","module.exports = __webpack_public_path__ + \"static/media/呆滞.c02b6732.svg\";","module.exports = __webpack_public_path__ + \"static/media/坏笑.38df0242.svg\";","module.exports = __webpack_public_path__ + \"static/media/大哭 (1).73a42746.svg\";","module.exports = __webpack_public_path__ + \"static/media/大哭.5b353432.svg\";","module.exports = __webpack_public_path__ + \"static/media/头晕.a4691add.svg\";","module.exports = __webpack_public_path__ + \"static/media/害怕.9cb945bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/开心 (1).044462d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/开心.e97df700.svg\";","module.exports = __webpack_public_path__ + \"static/media/微笑.13577af5.svg\";","module.exports = __webpack_public_path__ + \"static/media/惊喜.5bdc936c.svg\";","module.exports = __webpack_public_path__ + \"static/media/愤怒.bfe4ef11.svg\";","module.exports = __webpack_public_path__ + \"static/media/无语.97e7b262.svg\";","module.exports = __webpack_public_path__ + \"static/media/石化.0bd4e3b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/耍帅.c44bdd60.svg\";","module.exports = __webpack_public_path__ + \"static/media/自恋.5ebfe249.svg\";","module.exports = __webpack_public_path__ + \"static/media/花痴.518dd60d.svg\";","\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./App.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./App.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./App.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./index.css\"), \"\");\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./icon.css\"), \"\");\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./job/index.css\"), \"\");\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./job/currentJob/index.css\"), \"\");\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./job/managerJob/index.css\"), \"\");\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./datamanager.css\"), \"\");\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--6-oneOf-7-1!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./functionmanager.css\"), \"\");\n\n// module\nexports.push([module.id, \".SiderBar {\\n  background: '#fff';\\n  min-height: calc(100vh - 80px);\\n}\\n.menu {\\n  text-align: left;\\n}\\n.collapse {\\n  float: left;\\n}\\n.breadcrumb {\\n  margin-bottom: 4px;\\n}\\n.App {\\n  text-align: center;\\n}\\n.App-logo {\\n  animation: App-logo-spin infinite 20s linear;\\n  height: 40vmin;\\n  pointer-events: none;\\n}\\n.notice {\\n  padding-right: 5px;\\n}\\n.photo {\\n  border-radius: 50%;\\n  margin-bottom: 10px;\\n}\\n.pageheader {\\n  background-color: #001529;\\n  display: flex;\\n  height: 65px;\\n  flex-direction: column;\\n  font-size: calc(10px + 2vmin);\\n  color: white;\\n}\\n.header-title {\\n  text-align: left;\\n  float: left;\\n  color: white;\\n}\\n@media screen and (max-width: 780px) {\\n  .header-left {\\n    display: none;\\n  }\\n}\\n.App-link {\\n  color: #61dafb;\\n}\\n@keyframes App-logo-spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  margin: 0;\\n  padding: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\", \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  /* overflow-y: hidden; */\\n  background-color: #f0f2f5;\\n}\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\", monospace;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".number-icon {\\n  width: 23px;\\n  height: 21px;\\n  border-radius: 50%;\\n  text-align: center;\\n  background-color: #c6d6d6;\\n  margin-left: 2px;\\n  float: right;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* statusbar */\\n.status-bar {\\n  text-align: left;\\n}\\n.status-bar .divider {\\n  margin: 6px;\\n  margin-left: 4px;\\n  margin-right: 8px;\\n}\\n.status-bar .status-bar-content {\\n  margin-left: 4px;\\n}\\n.status-bar .tab-right {\\n  float: right;\\n  margin-right: 6px;\\n}\\n.jobtab {\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* message-window */\\n.message-window .build-trace .bash {\\n  display: block;\\n}\\n.message-window code {\\n  background-color: inherit;\\n  padding: inherit;\\n}\\n.message-window pre code {\\n  white-space: pre-wrap;\\n  font-size: inherit;\\n  color: inherit;\\n  word-break: normal;\\n}\\n.message-window .term-fg-l-green {\\n  color: #00d600;\\n}\\n.message-window .term-bold {\\n  font-weight: 600;\\n}\\n.message-window .build-trace {\\n  background: #000;\\n  color: #e1ffe8;\\n  white-space: pre;\\n  overflow-x: auto;\\n  font-size: 12px;\\n  border-radius: 0;\\n  border: 0;\\n  padding: 8px;\\n  text-align: left;\\n}\\n.message-window pre {\\n  font-family: \\\"Menlo\\\", \\\"DejaVu Sans Mono\\\", \\\"Liberation Mono\\\", \\\"Consolas\\\", \\\"Ubuntu Mono\\\", \\\"Courier New\\\", \\\"andale mono\\\", \\\"lucida console\\\", monospace;\\n  display: block;\\n  padding: 8px 12px;\\n  margin: 0 0 8px;\\n  font-size: 13px;\\n  word-break: break-all;\\n  word-wrap: break-word;\\n  color: #2e2e2e;\\n  background-color: #fafafa;\\n  border: 1px solid #e5e5e5;\\n  border-radius: 2px;\\n  overflow: auto;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".joblist .jobtab {\\n  text-align: left;\\n  margin: 6px;\\n  margin-left: 12px;\\n}\\n.joblist .divider {\\n  margin: 6px;\\n  margin-left: 4px;\\n  margin-right: 8px;\\n}\\n.ManagerJob {\\n  text-align: left;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".datamanager {\\n  text-align: left;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".functionmanager {\\n  text-align: left;\\n}\\n.ant-upload-text {\\n  opacity: 0.6;\\n}\\n\", \"\"]);\n\n// exports\n","/**\r\n * message\r\n */\r\nexport const SUCCESS = 'SUCCESS';\r\nexport const ERROR = 'ERROR';\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\r\n\r\n/**jumprouter */\r\nexport const JUMP_ROUTER = 'JUMP_ROUTER';\r\n\r\n/**\r\n * job\r\n * _COLLECT_*表示与采集任务相关\r\n * _CLEAN_*表示与清洗任务相关\r\n *\r\n * REQUEST_* 请求*\r\n * LOAD_* 加载*\r\n * FETCH_* 获取*\r\n * SUBMIT_* 提交*\r\n */\r\n\r\n/**job */\r\n\r\nexport const REQUEST_JOB = 'REQUEST_JOB';\r\nexport const LOAD_JOB = 'LOAD_JOB';\r\nexport const FETCH_JOB = 'FETCH_JOB';\r\n\r\n/**newJob */\r\n\r\nexport const REQUEST_COLLECT_CITY_LIST = 'REQUEST_COLLECT_CITY_LIST';\r\nexport const REQUEST_COLLECT_DATA_LIST = 'REQUEST_COLLECT_DATA_LIST';\r\nexport const REQUEST_CLEAN_CITY_LIST = 'REQUEST_CLEAN_CITY_LIST';\r\nexport const REQUEST_CLEAN_DATA_LIST = 'REQUEST_CLEAN_DATA_LIST';\r\nexport const REQUEST_FUNCTION_LIST = 'REQUEST_FUNCTION_LIST';\r\nexport const REQUEST_DATA_COL_LIST = 'REQUEST_DATA_COL_LIST';\r\n\r\nexport const REQUEST_DOWNLOAD_PATH = 'REQUEST_DOWNLOAD_PATH';\r\n\r\nexport const LOAD_COLLECT_CITY_LIST = 'LOAD_COLLECT_CITY_LIST';\r\nexport const LOAD_COLLECT_DATA_LIST = 'LOAD_COLLECT_DATA_LIST';\r\nexport const LOAD_CLEAN_CITY_LIST = 'LOAD_CLEAN_CITY_LIST';\r\nexport const LOAD_CLEAN_DATA_LIST = 'LOAD_CLEAN_DATA_LIST';\r\nexport const LOAD_FUNCTION_LIST = 'LOAD_FUNCTION_LIST';\r\nexport const LOAD_DATA_COL_LIST = 'LOAD_DATA_COL_LIST';\r\n\r\nexport const FETCH_COLLECT_CITY_LIST = 'FETCH_COLLECT_CITY_LIST';\r\nexport const FETCH_COLLECT_DATA_LIST = 'FETCH_COLLECT_DATA_LIST';\r\nexport const FETCH_CLEAN_CITY_LIST = 'FETCH_CLEAN_CITY_LIST';\r\nexport const FETCH_CLEAN_DATA_LIST = 'FETCH_CLEAN_DATA_LIST';\r\nexport const FETCH_FUNCTION_LIST = 'FETCH_FUNCTION_LIST';\r\nexport const FETCH_DATA_COL_LIST = 'FETCH_DATA_COL_LIST';\r\n\r\nexport const SUBMIT_COLLECT_JOB = 'SUBMIT_COLLECT_JOB';\r\nexport const SUBMIT_CLEAN_JOB = 'SUBMIT_CLEAN_JOB';\r\n\r\n/**managerJob */\r\n\r\nexport const REQUEST_JOB_LIST = 'REQUEST_JOB_LIST';\r\nexport const LOAD_JOB_LIST = 'LOAD_JOB_LIST';\r\nexport const FETCH_JOB_LIST = 'FETCH_JOB_LIST';\r\n\r\n/**managerData */\r\n\r\nexport const REQUEST_TREE_DATA = 'REQUEST_TREE_DATA';\r\nexport const LOAD_TREE_DATA = 'LOAD_TREE_DATA';\r\nexport const FETCH_TREE_DATA = 'FETCH_TREE_DATA';\r\n\r\n/**managerUser */\r\n\r\nexport const REQUEST_USER_DATA = 'REQUEST_USER_DATA';\r\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\r\nexport const FETCH_USER_DATA = 'FETCH_USER_DATA';\r\n\r\n/**managerFunction */\r\n\r\nexport const REQUEST_FUNCTION_DATA = 'REQUEST_FUNCTION_DATA';\r\nexport const LOAD_FUNCTION_DATA = 'LOAD_FUNCTION_DATA';\r\nexport const FETCH_FUNCTION_DATA = 'FETCH_FUNCTION_DATA';\r\n\r\n/**submitFUnction */\r\n\r\nexport const SUBMIT_FUNCTION = 'SUBMIT_FUNCTION';\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n  message: '',\r\n  success: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionConstants.SUCCESS:\r\n      {\r\n        return {\r\n          ...state,\r\n          success: true,\r\n          message: action.payload.message\r\n        };\r\n      }\r\n\r\n    case ActionConstants.ERROR:\r\n      {\r\n        return {\r\n          ...state,\r\n          success: false,\r\n          message: action.payload.message\r\n        };\r\n      }\r\n\r\n    case ActionConstants.CLEAR_MESSAGE:\r\n      {\r\n        return {\r\n          ...state,\r\n          success: false,\r\n          message: ''\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n  collectCityList: [],\r\n  collectDataList: [],\r\n  collectCityStatus: false,\r\n  collectDataStatus: false\r\n};\r\n\r\nconst loading = true;\r\nconst unLoading = false;\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionConstants.FETCH_COLLECT_CITY_LIST: {\r\n      return {\r\n        ...state,\r\n        collectCityList: action.payload.collectCityList,\r\n        collectCityStatus: unLoading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.FETCH_COLLECT_DATA_LIST: {\r\n      return {\r\n        ...state,\r\n        collectDataList: action.payload.collectDataList,\r\n        collectDataStatus: unLoading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.LOAD_COLLECT_CITY_LIST: {\r\n      return {\r\n        ...state,\r\n        collectCityStatus: loading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.LOAD_COLLECT_DATA_LIST: {\r\n      return {\r\n        ...state,\r\n        collectDataStatus: loading\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n  cleanCityList: [],\r\n  cleanDataList: [],\r\n  functionList: [],\r\n  dataColList: {},\r\n  cleanCityStatus: false,\r\n  cleanDataStatus: false,\r\n  functionStatus: false,\r\n  dataColStatus: false\r\n};\r\n\r\nconst loading = true;\r\nconst unLoading = false;\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionConstants.FETCH_CLEAN_CITY_LIST: {\r\n      return {\r\n        ...state,\r\n        cleanCityList: action.payload.cleanCityList,\r\n        cleanCityStatus: unLoading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.FETCH_CLEAN_DATA_LIST: {\r\n      return {\r\n        ...state,\r\n        cleanDataList: action.payload.cleanDataList,\r\n        cleanDataStatus: unLoading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.FETCH_FUNCTION_LIST: {\r\n      return {\r\n        ...state,\r\n        functionList: action.payload.functionList,\r\n        functionStatus: unLoading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.FETCH_DATA_COL_LIST: {\r\n      return {\r\n        ...state,\r\n        dataColList: action.payload.dataColList,\r\n        dataColStatus: unLoading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.LOAD_CLEAN_CITY_LIST: {\r\n      return {\r\n        ...state,\r\n        cleanCityStatus: loading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.LOAD_CLEAN_DATA_LIST: {\r\n      return {\r\n        ...state,\r\n        cleanDataStatus: loading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.LOAD_FUNCTION_LIST: {\r\n      return {\r\n        ...state,\r\n        functionStatus: loading\r\n      };\r\n    }\r\n\r\n    case ActionConstants.LOAD_DATA_COL_LIST: {\r\n      return {\r\n        ...state,\r\n        dataColStatus: loading\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n  jobList: [],\r\n  countList: {},\r\n  loadStatus: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionConstants.FETCH_JOB_LIST:\r\n      {\r\n        return {\r\n          ...state,\r\n          jobList: action.payload.jobList,\r\n          countList: action.payload.countList,\r\n          loadStatus: false\r\n        };\r\n      }\r\n\r\n    case ActionConstants.LOAD_JOB_LIST:\r\n      {\r\n        return {\r\n          ...state,\r\n          loadStatus: true\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n  treeData: [{\r\n    name:'数据目录'\r\n  }],\r\n  loadStatus: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionConstants.FETCH_TREE_DATA:\r\n      {\r\n        return {\r\n          ...state,\r\n          treeData: action.payload.treeData,\r\n          loadStatus: false\r\n        };\r\n      }\r\n\r\n    case ActionConstants.LOAD_TREE_DATA:\r\n      {\r\n        return {\r\n          ...state,\r\n          loadStatus: true\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n  userData: [],\r\n  loadStatus: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionConstants.FETCH_USER_DATA:\r\n      {\r\n        return {\r\n          ...state,\r\n          userData: action.payload.userData,\r\n          loadStatus: false\r\n        };\r\n      }\r\n\r\n    case ActionConstants.LOAD_USER_DATA:\r\n      {\r\n        return {\r\n          ...state,\r\n          loadStatus: true\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n  functionData: [],\r\n  loadStatus: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionConstants.FETCH_FUNCTION_DATA: {\r\n      return {\r\n        ...state,\r\n        functionData: action.payload.functionData,\r\n        loadStatus: false\r\n      };\r\n    }\r\n\r\n    case ActionConstants.LOAD_FUNCTION_DATA: {\r\n      return {\r\n        ...state,\r\n        loadStatus: true\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { LOAD_JOB, FETCH_JOB } from '../../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n  job: {\r\n    name: 'jobNname',\r\n    created: '20190101',\r\n    creator: {\r\n      name: 'username',\r\n      photo: 'user'\r\n    },\r\n    messages: [],\r\n    status: 'pending'\r\n  },\r\n  loadStatus: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_JOB: {\r\n      return {\r\n        ...state,\r\n        loadStatus: true\r\n      };\r\n    }\r\n    case FETCH_JOB: {\r\n      const job = action.payload.data;\r\n      return {\r\n        ...state,\r\n        job: {\r\n          ...job,\r\n          messages:\r\n            state.job &&\r\n            state.job.name == job.name &&\r\n            job.status == 'running'\r\n              ? state.job.messages.concat(job.messages)\r\n              : job.messages\r\n        },\r\n        loadStatus: false\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport Reducer from './reducers';\r\nimport NewCollectJobReducers from './reducers/NewCollectJobReducers';\r\nimport NewCleanJobReducers from './reducers/NewCleanJobReducers';\r\nimport ManagerJobReducers from './reducers/ManagerJobReducers';\r\nimport ManagerDataReducers from './reducers/ManagerDataReducers';\r\nimport ManagerUserReducers from './reducers/ManagerUserReducers';\r\nimport ManagerFunctionReducers from './reducers/ManagerFunctionReducers';\r\nimport JobReducers from './reducers/JobReducers';\r\n\r\nconst allReducers = {\r\n  Reducer,\r\n  NewCleanJobReducers,\r\n  NewCollectJobReducers,\r\n  ManagerJobReducers,\r\n  ManagerDataReducers,\r\n  ManagerUserReducers,\r\n  ManagerFunctionReducers,\r\n  JobReducers\r\n};\r\n\r\nconst rootReducer = combineReducers(allReducers);\r\n\r\nexport default rootReducer;\r\n","export const API = 'https://www.easy-mock.com/mock/5c749bbc0d6f122f99e20e85/api';\r\n// export const MOCK_API =\r\n//   'https://www.easy-mock.com/mock/5c749bbc0d6f122f99e20e85/api';\r\n\r\nexport const JOB_API = API + '/job';\r\nexport const DATA_API = API + '/data';\r\nexport const DATA_CITY_CPI = API + DATA_API + '/city';\r\nexport const DATA_COL_CPI = API + DATA_API + '/col';\r\nexport const USER_API = API + '/user';\r\nexport const FUNCTION_API = API + '/function';\r\n","const headers = {\r\n  'user-agent':\r\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36',\r\n  'content-type': 'application/json'\r\n};\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  } else {\r\n    var error = new Error(response.statusText);\r\n    error.response = response;\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction transParamsToUrl(url, params) {\r\n  if (params) {\r\n    let paramsArray = [];\r\n    //拼接参数\r\n    Object.keys(params).forEach(key =>\r\n      paramsArray.push(key + '=' + params[key])\r\n    );\r\n    if (url.search(/\\?/) === -1) {\r\n      url += '?' + paramsArray.join('&');\r\n    } else {\r\n      url += '&' + paramsArray.join('&');\r\n    }\r\n  }\r\n  return url;\r\n}\r\n\r\n/**\r\n * POST更新资源\r\n * @param {String} url\r\n * @param {Object} data\r\n * @example\r\n * postData('http://example.com/answer', {answer: 42})\r\n * .then(data => console.log(data))\r\n * .catch(error => console.error(error))\r\n */\r\nexport function postData(url, data) {\r\n  return fetch(url, {\r\n    body: JSON.stringify(data), // must match 'Content-Type' header\r\n    cache: 'default', // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: 'same-origin', // include, same-origin, *omit\r\n    headers: headers,\r\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    mode: 'cors', // no-cors, cors, *same-origin\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrer: 'no-referrer' // *client, no-referrer\r\n  })\r\n    .then(checkStatus)\r\n    .then(response => response.json()); // parses response to JSON\r\n}\r\n\r\n/**\r\n * PUT添加资源\r\n * @param {String} url\r\n * @param {Object} data\r\n * @example\r\n * putData('http://example.com/answer', {answer: 42})\r\n * .then(data => console.log(data))\r\n * .catch(error => console.error(error))\r\n */\r\nexport function putData(url, data) {\r\n  return fetch(url, {\r\n    body: data,\r\n    method: 'PUT',\r\n    headers: headers,\r\n    // 同域请求使用 same-origin\r\n    // 跨域请求使用 include\r\n    credentials: 'same-origin',\r\n    mode: 'cors', // no-cors, cors, *same-origin\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrer: 'no-referrer' // *client, no-referrer\r\n  })\r\n    .then(checkStatus)\r\n    .then(response => response.json());\r\n}\r\n\r\n/**\r\n * GET请求请求资源\r\n * @param {String} url\r\n * @param {Object} params\r\n * @example\r\n * getData('http://example.com/answer', {answer: 42})\r\n * .then(data => console.log(data))\r\n * .catch(error => console.error(error))\r\n */\r\nexport function getData(url, params) {\r\n  return fetch(transParamsToUrl(url, params), {\r\n    method: 'GET',\r\n    headers: headers\r\n  })\r\n    .then(checkStatus)\r\n    .then(response => response.json());\r\n}\r\n\r\n/**\r\n * DELETE删除资源\r\n * @param {String} url\r\n * @param {Object} params\r\n * @example\r\n * deleteData('http://example.com/answer', {answer: 42})\r\n * .then(data => console.log(data))\r\n * .catch(error => console.error(error))\r\n */\r\nexport function deleteData(url, params) {\r\n  return fetch(transParamsToUrl(url, params), {\r\n    method: 'DELETE',\r\n    headers: headers\r\n  })\r\n    .then(checkStatus)\r\n    .then(response => response.json());\r\n}\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nexport const success = message => {\r\n  return {\r\n    type: ActionConstants.SUCCESS,\r\n    payload: {\r\n      message\r\n    }\r\n  };\r\n};\r\n\r\nexport const error = message => {\r\n  return {\r\n    type: ActionConstants.ERROR,\r\n    payload: {\r\n      message\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearMessage = () => {\r\n  return {\r\n    type: ActionConstants.CLEAR_MESSAGE\r\n  };\r\n};\r\n\r\nexport const jumpRouter = path => {\r\n  return {\r\n    type: ActionConstants.JUMP_ROUTER,\r\n    payload: {\r\n      path\r\n    }\r\n  };\r\n};\r\n","import {\r\n    put,\r\n    delay\r\n} from 'redux-saga/effects';\r\nimport * as Actions from '../actions';\r\n\r\nconst {\r\n    success,\r\n    error,\r\n    clearMessage\r\n} = Actions;\r\n\r\nexport function* successAsync(message) {\r\n    yield put(success(message));\r\n    yield delay(10);\r\n    yield put(clearMessage());\r\n}\r\n\r\nexport function* errorAsync(message) {\r\n    yield put(error(message));\r\n    yield delay(10);\r\n    yield put(clearMessage());\r\n}","import { put, call, fork, takeLatest } from 'redux-saga/effects';\r\nimport * as NewCollectJobActions from '../actions/NewCollectJobActions';\r\nimport * as ActionConstants from '../../constants/ActionConstants';\r\nimport {\r\n  JOB_API,\r\n  DATA_CITY_CPI,\r\n  DATA_API\r\n} from '../../constants/ApiConstants';\r\nimport { getData, putData } from '../../api/Api';\r\nimport { successAsync, errorAsync } from './index';\r\n\r\nconst {\r\n  loadCollectCityList,\r\n  loadCollectDataList,\r\n  fetchCollectCityList,\r\n  fetchCollectDataList\r\n} = NewCollectJobActions;\r\n\r\nfunction* requestCollectCityListAsync() {\r\n  try {\r\n    yield put(loadCollectCityList());\r\n    const response = yield call(getData.bind(this, DATA_CITY_CPI));\r\n    yield put(fetchCollectCityList(response.data));\r\n  } catch (error) {\r\n    /**\r\n     * 此处如果发生异常，则put ErrorAction\r\n     * 另外也需要put FETCH_*Action，参数为null，以此消除加载\r\n     */\r\n    console.log('失败===模拟城市数据');\r\n    const response = {\r\n      data: [\r\n        '黄石市',\r\n        '广州市',\r\n        '泉州市',\r\n        '深圳市',\r\n        '延边朝鲜族自治州',\r\n        '佛山市',\r\n        '厦门市',\r\n        '上海市',\r\n        '塔城地区',\r\n        '呼和浩特市'\r\n      ],\r\n      success: true\r\n    };\r\n    yield put(fetchCollectCityList(response.data));\r\n  }\r\n}\r\n\r\nfunction* requestCollectDataListAsync(action) {\r\n  try {\r\n    yield put(loadCollectDataList());\r\n    const response = yield call(\r\n      getData.bind(this, DATA_API, {\r\n        city: action.payload.city\r\n      })\r\n    );\r\n    yield put(fetchCollectDataList(response.data));\r\n  } catch (error) {\r\n    console.log('失败====模拟 佛山市 数据项');\r\n    const response = {\r\n      data: [\r\n        '佛山市 Hernandez数据',\r\n        '佛山市 Brown数据',\r\n        '佛山市 Martinez数据',\r\n        '佛山市 Lopez数据',\r\n        '杭州市Maria Walker数据',\r\n        '佛山市 Moore数据',\r\n        '佛山市 Walker数据',\r\n        '佛山市 Anderson数据',\r\n        '佛山市 Smith数据'\r\n      ],\r\n      success: true\r\n    };\r\n    yield put(fetchCollectDataList(response.data));\r\n  }\r\n}\r\n\r\nfunction* submitCollectJobAsync(action) {\r\n  try {\r\n    const response = yield call(\r\n      putData.bind(this, JOB_API, {\r\n        job: action.payload.job\r\n      })\r\n    );\r\n    yield fork(successAsync, '成功提交任务：' + response.name);\r\n  } catch (e) {\r\n    yield fork(errorAsync, '提交任务失败！：');\r\n  }\r\n}\r\n\r\nexport function* watchCollectJob() {\r\n  yield takeLatest(\r\n    ActionConstants.REQUEST_COLLECT_CITY_LIST,\r\n    requestCollectCityListAsync\r\n  );\r\n  yield takeLatest(\r\n    ActionConstants.REQUEST_COLLECT_DATA_LIST,\r\n    requestCollectDataListAsync\r\n  );\r\n  yield takeLatest(ActionConstants.SUBMIT_COLLECT_JOB, submitCollectJobAsync);\r\n}\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\n/**\r\n * 請求采集任务城市\r\n */\r\nexport const requestCollectCityList = () => {\r\n  return {\r\n    type: ActionConstants.REQUEST_COLLECT_CITY_LIST\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * 请求采集任务相应城市的数据项\r\n * @param {String} city 城市\r\n */\r\nexport const requestCollectDataList = (city) => {\r\n  return {\r\n    type: ActionConstants.REQUEST_COLLECT_DATA_LIST,\r\n    payload: {\r\n      city\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 提交采集任务\r\n * @param {Object} job 任务\r\n */\r\nexport const submitCollectJob = (job) => {\r\n  return {\r\n    type: ActionConstants.SUBMIT_COLLECT_JOB,\r\n    payload: {\r\n      job\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 保存采集到的数据至本地\r\n * @param {String} path\r\n */\r\nexport const download = (path) => {\r\n  return {\r\n    type: ActionConstants.SUBMIT_COLLECT_JOB,\r\n    payload: {\r\n      path\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 获取到采集任务城市列表\r\n * @param {Array} collectCityList 城市列表数据\r\n */\r\nexport const fetchCollectCityList = (collectCityList) => {\r\n  return {\r\n    type: ActionConstants.FETCH_COLLECT_CITY_LIST,\r\n    payload: {\r\n      collectCityList\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 获取到采集任务相应城市数据项列表\r\n * @param {Array} collectDataList 数据项列表\r\n */\r\nexport const fetchCollectDataList = (collectDataList) => {\r\n  return {\r\n    type: ActionConstants.FETCH_COLLECT_DATA_LIST,\r\n    payload: {\r\n      collectDataList\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 加载采集任务城市列表\r\n */\r\nexport const loadCollectCityList = () => {\r\n  return {\r\n    type: ActionConstants.LOAD_COLLECT_CITY_LIST\r\n  };\r\n};\r\n\r\n/**\r\n * 加载采集任务相应城市数据项列表\r\n */\r\nexport const loadCollectDataList = () => {\r\n  return {\r\n    type: ActionConstants.LOAD_COLLECT_DATA_LIST\r\n  };\r\n};\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\n/**\r\n * 请求清洗任务城市\r\n */\r\nexport const requestCleanCityList = () => {\r\n  return {\r\n    type: ActionConstants.REQUEST_CLEAN_CITY_LIST\r\n  };\r\n};\r\n\r\n/**\r\n * 请求清洗任务相应城市得数据项\r\n * @param {String} city 城市\r\n */\r\nexport const requestCleanDataList = (city) => {\r\n  return {\r\n    type: ActionConstants.REQUEST_CLEAN_DATA_LIST,\r\n    payload: {\r\n      city\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 请求函数\r\n */\r\nexport const requestFunctionList = () => {\r\n  return {\r\n    type: ActionConstants.REQUEST_FUNCTION_LIST\r\n  };\r\n};\r\n\r\n/**\r\n * 请求数据项详细数据列\r\n * @param {Array[data]} datas 数据项\r\n */\r\nexport const requestDataColList = (datas) => {\r\n  return {\r\n    type: ActionConstants.REQUEST_DATA_COL_LIST,\r\n    payload: {\r\n      datas\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 获取清洗任务城市列表\r\n * @param {Array} cleanCityList 城市列表\r\n */\r\nexport const fetchCleanCityList = (cleanCityList) => {\r\n  return {\r\n    type: ActionConstants.FETCH_CLEAN_CITY_LIST,\r\n    payload: {\r\n      cleanCityList\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 获取清洗任务数据项列表\r\n * @param {Array} cleanDataList 数据项列表\r\n */\r\nexport const fetchCleanDataList = (cleanDataList) => {\r\n  return {\r\n    type: ActionConstants.FETCH_CLEAN_DATA_LIST,\r\n    payload: {\r\n      cleanDataList\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 获取函数\r\n * @param {Array} functionList 函数\r\n */\r\nexport const fetchFunctionList = (functionList) => {\r\n  return {\r\n    type: ActionConstants.FETCH_FUNCTION_LIST,\r\n    payload: {\r\n      functionList\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 获取数据列\r\n * @param {Array} dataColList 数据项列表\r\n */\r\nexport const fetchDataColList = (dataColList) => {\r\n  return {\r\n    type: ActionConstants.FETCH_DATA_COL_LIST,\r\n    payload: {\r\n      dataColList\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * 加载清洗任务城市数据\r\n */\r\nexport const loadCleanCityList = () => {\r\n  return {\r\n    type: ActionConstants.LOAD_CLEAN_CITY_LIST\r\n  };\r\n};\r\n\r\n/**\r\n * 加载清洗任务数据项\r\n */\r\nexport const loadCleanDataList = () => {\r\n  return {\r\n    type: ActionConstants.LOAD_CLEAN_DATA_LIST\r\n  };\r\n};\r\n\r\n/**\r\n * 加载函数\r\n */\r\nexport const loadFunctionList = () => {\r\n  return {\r\n    type: ActionConstants.LOAD_FUNCTION_LIST\r\n  };\r\n};\r\n\r\n/**\r\n * 加载数据列\r\n */\r\nexport const loadDataColList = () => {\r\n  return {\r\n    type: ActionConstants.LOAD_DATA_COL_LIST\r\n  };\r\n};\r\n\r\n/**\r\n * 提交清洗任务\r\n * @param {Object} job 任务\r\n */\r\nexport const submitCleanJob = (job) => {\r\n  return {\r\n    type: ActionConstants.SUBMIT_CLEAN_JOB,\r\n    payload: {\r\n      job\r\n    }\r\n  };\r\n};","import { put, call, fork, takeLatest } from 'redux-saga/effects';\r\nimport * as NewCleanJobActions from '../actions/NewCleanJobActions';\r\nimport * as ActionConstants from '../../constants/ActionConstants';\r\nimport {\r\n  JOB_API,\r\n  DATA_CITY_CPI,\r\n  DATA_API,\r\n  FUNCTION_API,\r\n  DATA_COL_CPI\r\n} from '../../constants/ApiConstants';\r\nimport { getData, putData } from '../../api/Api';\r\nimport { successAsync, errorAsync } from './index';\r\n\r\nconst {\r\n  loadCleanCityList,\r\n  loadCleanDataList,\r\n  loadFunctionList,\r\n  loadDataColList,\r\n  fetchCleanCityList,\r\n  fetchCleanDataList,\r\n  fetchFunctionList,\r\n  fetchDataColList\r\n} = NewCleanJobActions;\r\n\r\nfunction* requestCleanCityListAsync() {\r\n  try {\r\n    yield put(loadCleanCityList());\r\n    const response = yield call(getData.bind(this, DATA_CITY_CPI));\r\n    yield put(fetchCleanCityList(response.data));\r\n  } catch (error) {\r\n    /**\r\n     * 此处如果发生异常，则put ErrorAction\r\n     * 另外也需要put FETCH_*Action，参数为null，以此消除加载\r\n     */\r\n    console.log('失败===模拟城市数据');\r\n    const response = {\r\n      data: [\r\n        '黄石市',\r\n        '广州市',\r\n        '泉州市',\r\n        '深圳市',\r\n        '延边朝鲜族自治州',\r\n        '佛山市',\r\n        '厦门市',\r\n        '上海市',\r\n        '塔城地区',\r\n        '呼和浩特市'\r\n      ],\r\n      success: true\r\n    };\r\n    yield put(fetchCleanCityList(response.data));\r\n  }\r\n}\r\n\r\nfunction* requestCleanDataListAsync(action) {\r\n  try {\r\n    yield put(loadCleanDataList());\r\n    const response = yield call(\r\n      getData.bind(this, DATA_API, {\r\n        city: action.payload.city\r\n      })\r\n    );\r\n    yield put(fetchCleanDataList(response.data));\r\n  } catch (error) {\r\n    console.log('失败====模拟 佛山市 数据项');\r\n    const response = {\r\n      data: [\r\n        '佛山市 Hernandez数据',\r\n        '佛山市 Brown数据',\r\n        '佛山市 Martinez数据',\r\n        '佛山市 Lopez数据',\r\n        '杭州市Maria Walker数据',\r\n        '佛山市 Moore数据',\r\n        '佛山市 Walker数据',\r\n        '佛山市 Anderson数据',\r\n        '佛山市 Smith数据'\r\n      ],\r\n      success: true\r\n    };\r\n    yield put(fetchCleanDataList(response.data));\r\n  }\r\n}\r\n\r\nfunction* requestFunctionListAsync() {\r\n  try {\r\n    yield put(loadFunctionList());\r\n    const response = yield call(getData.bind(this, FUNCTION_API));\r\n    yield put(fetchFunctionList(response.data));\r\n  } catch (error) {\r\n    /**\r\n     * 此处如果发生异常，则put ErrorAction\r\n     * 另外也需要put FETCH_*Action，参数为null，以此消除加载\r\n     */\r\n    console.log('失败===函数数据');\r\n    const response = {\r\n      data: ['udfTest', 'udfGetJonObject', 'udfLowToUpper'],\r\n      success: true\r\n    };\r\n    yield put(fetchFunctionList(response.data));\r\n  }\r\n}\r\n\r\nfunction* requestDataColListAsync(action) {\r\n  try {\r\n    yield put(loadDataColList());\r\n    const response = yield call(\r\n      getData.bind(this, DATA_COL_CPI, {\r\n        city: action.payload.datas\r\n      })\r\n    );\r\n    yield put(fetchDataColList(response.data));\r\n  } catch (error) {\r\n    console.log('失败====模拟 佛山市 数据项');\r\n    const response = {\r\n      data: {\r\n        佛山: ['col1', 'col2', 'col3'],\r\n        贵州: ['col1', 'col2', 'col3']\r\n      },\r\n      success: true\r\n    };\r\n    yield put(fetchDataColList(response.data));\r\n  }\r\n}\r\n\r\nfunction* submitCleanJobAsync(action) {\r\n  try {\r\n    const response = yield call(\r\n      putData.bind(this, JOB_API, {\r\n        job: action.payload.job\r\n      })\r\n    );\r\n    yield fork(successAsync, '成功提交任务：' + response.name);\r\n  } catch (e) {\r\n    yield fork(errorAsync, '提交任务失败！：');\r\n  }\r\n}\r\n\r\nexport function* watchCleanJob() {\r\n  yield takeLatest(\r\n    ActionConstants.REQUEST_CLEAN_CITY_LIST,\r\n    requestCleanCityListAsync\r\n  );\r\n  yield takeLatest(\r\n    ActionConstants.REQUEST_CLEAN_DATA_LIST,\r\n    requestCleanDataListAsync\r\n  );\r\n  yield takeLatest(\r\n    ActionConstants.REQUEST_FUNCTION_LIST,\r\n    requestFunctionListAsync\r\n  );\r\n  yield takeLatest(\r\n    ActionConstants.REQUEST_DATA_COL_LIST,\r\n    requestDataColListAsync\r\n  );\r\n  yield takeLatest(ActionConstants.SUBMIT_CLEAN_JOB, submitCleanJobAsync);\r\n}\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nexport const requestJobList = (param) => {\r\n    return {\r\n        type: ActionConstants.REQUEST_JOB_LIST,\r\n        payload: {\r\n            param\r\n        }\r\n    };\r\n};\r\n\r\nexport const loadJobList = () => {\r\n    return {\r\n        type: ActionConstants.LOAD_JOB_LIST\r\n    };\r\n};\r\n\r\nexport const fetchJobList = (data) => {\r\n    return {\r\n        type: ActionConstants.FETCH_JOB_LIST,\r\n        payload: {\r\n            jobList:data.jobList,\r\n            countList:data.countList\r\n        }\r\n    };\r\n};","import {\r\n  put,\r\n  call,\r\n  takeLatest\r\n} from 'redux-saga/effects';\r\nimport * as ManagerJobActions from '../actions/ManagerJobActions';\r\nimport * as ActionConstants from '../../constants/ActionConstants';\r\nimport { JOB_API } from '../../constants/ApiConstants';\r\nimport {\r\n  getData\r\n} from '../../api/Api';\r\n\r\n\r\nconst {\r\n  loadJobList,\r\n  fetchJobList\r\n} = ManagerJobActions;\r\n\r\nfunction* requestJobListAsync(action) {\r\n  try {\r\n    const param = action.payload.param;\r\n    yield put(loadJobList());\r\n    const response = yield call(getData.bind(this, JOB_API, param));\r\n    yield put(fetchJobList(response.data));\r\n  } catch (error) {\r\n    /**\r\n     * 未知错误，跳转页面\r\n     */\r\n    console.log('失败====模拟 jobList');\r\n    const response = {\r\n      'data': {\r\n        jobList: [{\r\n            status: 'pending',\r\n            name: 'name1',\r\n            created: 'created',\r\n            creator: {\r\n              name: 'username',\r\n              photo: 'user'\r\n            },\r\n            data: 'data',\r\n            completed: 'completed'\r\n          },\r\n          {\r\n            status: 'pending',\r\n            name: 'name2',\r\n            created: 'created',\r\n            creator: {\r\n              name: 'username',\r\n              photo: 'user'\r\n            },\r\n            data: 'data',\r\n            completed: 'completed'\r\n          }\r\n        ],\r\n        countList: {\r\n          'All': 7,\r\n          'Pending': 0,\r\n          'Runing': 1,\r\n          'Finished': 6\r\n        }\r\n      },\r\n      'success': true\r\n    };\r\n    yield put(fetchJobList(response.data));\r\n  }\r\n}\r\n\r\n\r\nexport function* watchJobList() {\r\n  yield takeLatest(ActionConstants.REQUEST_JOB_LIST, requestJobListAsync);\r\n}","import * as ActionsConstant from '../../constants/ActionConstants';\r\n\r\nexport const requestTreeData = ()=>{\r\n    return {\r\n        type: ActionsConstant.REQUEST_TREE_DATA\r\n    };\r\n};\r\n\r\nexport const loadTreeData = ()=>{\r\n    return {\r\n        type: ActionsConstant.LOAD_TREE_DATA\r\n    };\r\n};\r\n\r\nexport const fetchTreeData = (treeData)=>{\r\n    return {\r\n        type: ActionsConstant.FETCH_TREE_DATA,\r\n        payload:{\r\n            treeData\r\n        }\r\n    };\r\n};","import {\r\n    put,\r\n    call,\r\n    takeLatest\r\n} from 'redux-saga/effects';\r\nimport * as ManagerDataActions from '../actions/ManagerDataActions';\r\nimport * as ActionConstants from '../../constants/ActionConstants';\r\nimport { DATA_API } from '../../constants/ApiConstants';\r\nimport {\r\n    getData\r\n} from '../../api/Api';\r\n\r\n\r\nconst {\r\n    loadTreeData,\r\n    fetchTreeData\r\n} = ManagerDataActions;\r\n\r\nfunction* requestTreeDataAsync() {\r\n    try {\r\n        yield put(loadTreeData());\r\n        const response = yield call(getData.bind(this, DATA_API));\r\n        yield put(fetchTreeData(response.data));\r\n    } catch (error) {\r\n        /**\r\n         * 未知错误，跳转页面\r\n         */\r\n        console.log('失败====模拟 jobList');\r\n        const response = {\r\n            'data': [{\r\n                name: '数据目录',\r\n                data: [{\r\n                        name: '佛山',\r\n                        data: [{\r\n                                name: '佛山asdasd数据'\r\n                            },\r\n                            {\r\n                                name: '佛山asdasd数据'\r\n                            },\r\n                            {\r\n                                name: '佛山asdasd数据'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: '贵州',\r\n                        data: [{\r\n                                name: '佛山asdasd数据'\r\n                            },\r\n                            {\r\n                                name: '佛山asdasd数据'\r\n                            },\r\n                            {\r\n                                name: '佛山asdasd数据'\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }]\r\n        };\r\n        yield put(fetchTreeData(response.data));\r\n    }\r\n}\r\n\r\n\r\nexport function* watchTreeData() {\r\n    yield takeLatest(ActionConstants.REQUEST_TREE_DATA, requestTreeDataAsync);\r\n}","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nexport const requestUserData = () => {\r\n  return {\r\n    type: ActionConstants.REQUEST_USER_DATA\r\n  };\r\n};\r\n\r\nexport const loadUserData = () => {\r\n  return {\r\n    type: ActionConstants.LOAD_USER_DATA\r\n  };\r\n};\r\n\r\nexport const fetchUserData = (userData) => {\r\n  return {\r\n    type: ActionConstants.FETCH_USER_DATA,\r\n    payload: {\r\n      userData\r\n    }\r\n  };\r\n};","import { put, call, takeLatest } from 'redux-saga/effects';\r\nimport * as ManagerUserActions from '../actions/ManagerUserActions';\r\nimport * as ActionConstants from '../../constants/ActionConstants';\r\nimport { USER_API } from '../../constants/ApiConstants';\r\nimport { getData } from '../../api/Api';\r\n\r\nconst { fetchUserData, loadUserData } = ManagerUserActions;\r\n\r\nfunction* requestUserDataAsync() {\r\n  try {\r\n    yield put(loadUserData());\r\n    const response = yield call(getData.bind(this, USER_API));\r\n    yield put(fetchUserData(response.data));\r\n  } catch (error) {\r\n    /**\r\n     * 未知错误，跳转页面\r\n     */\r\n    console.log('失败====模拟 userdata');\r\n\r\n    const arr = Array(30);\r\n    arr.fill({\r\n      name: '用户',\r\n      role: '角色',\r\n      created: '时间',\r\n      info: 'xinxi'\r\n    });\r\n    const response = {\r\n      data: arr,\r\n      success: true\r\n    };\r\n    yield put(fetchUserData(response.data));\r\n  }\r\n}\r\n\r\nexport function* watchUserList() {\r\n  yield takeLatest(ActionConstants.REQUEST_USER_DATA, requestUserDataAsync);\r\n}\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nexport const requestFunctionData = () => {\r\n  return {\r\n    type: ActionConstants.REQUEST_FUNCTION_DATA\r\n  };\r\n};\r\n\r\nexport const loadFunctionData = () => {\r\n  return {\r\n    type: ActionConstants.LOAD_FUNCTION_DATA\r\n  };\r\n};\r\n\r\nexport const fetchFunctionData = functionData => {\r\n  return {\r\n    type: ActionConstants.FETCH_FUNCTION_DATA,\r\n    payload: {\r\n      functionData\r\n    }\r\n  };\r\n};\r\n","import { put, call, takeLatest } from 'redux-saga/effects';\r\nimport * as ManagerFunctionActions from '../actions/ManagerFunctionActions';\r\nimport * as ActionConstants from '../../constants/ActionConstants';\r\nimport { FUNCTION_API } from '../../constants/ApiConstants';\r\nimport { getData } from '../../api/Api';\r\n\r\nconst { loadFunctionData, fetchFunctionData } = ManagerFunctionActions;\r\n\r\nfunction* requestFunctionDataAsync() {\r\n  try {\r\n    loadFunctionData, yield put(loadFunctionData());\r\n    const response = yield call(getData.bind(this, FUNCTION_API));\r\n    yield put(fetchFunctionData(response.data));\r\n  } catch (error) {\r\n    /**\r\n     * 未知错误，跳转页面\r\n     */\r\n    console.log('失败====模拟 functionData');\r\n    const response = {\r\n      data: [\r\n        {\r\n          functionName: 'PropTypes.string',\r\n          lastModifier: 'PropTypes.string',\r\n          lastModified: 'PropTypes.string',\r\n          resource: 'PropTypes.string',\r\n          tags: ['PropTypes.array']\r\n        }\r\n      ]\r\n    };\r\n    yield put(fetchFunctionData(response.data));\r\n  }\r\n}\r\n\r\nexport function* watchFunctionData() {\r\n  yield takeLatest(\r\n    ActionConstants.REQUEST_FUNCTION_DATA,\r\n    requestFunctionDataAsync\r\n  );\r\n}\r\n","import * as ActionContants from '../../constants/ActionConstants';\r\n\r\nexport const requestJob = jobName => {\r\n  return {\r\n    type: ActionContants.REQUEST_JOB,\r\n    payload: {\r\n      jobName\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadJob = () => {\r\n  return {\r\n    type: ActionContants.LOAD_JOB\r\n  };\r\n};\r\n\r\nexport const fetchJob = data => {\r\n  return {\r\n    type: ActionContants.FETCH_JOB,\r\n    payload: { data }\r\n  };\r\n};\r\n","import { put, call, takeLatest } from 'redux-saga/effects';\r\nimport { loadJob, fetchJob } from '../actions/JobActions';\r\nimport * as ActionConstants from '../../constants/ActionConstants';\r\nimport * as ApiConstants from '../../constants/ApiConstants';\r\nimport { getData } from '../../api/Api';\r\nimport moment from 'moment';\r\n\r\nfunction* requestJobAsync(action) {\r\n  const jobName = action.payload.jobName;\r\n  try {\r\n    yield put(loadJob());\r\n    const response = yield call(\r\n      getData.bind(this, ApiConstants.JOB_API + '/' + jobName)\r\n    );\r\n    yield put(fetchJob(response.data));\r\n  } catch (error) {\r\n    /**\r\n     * 未知错误，跳转页面\r\n     */\r\n    console.log('失败====模拟 job');\r\n    const response = {\r\n      data: {\r\n        name: jobName,\r\n        created: moment().format('YYYY-MM-DD'),\r\n        creator: {\r\n          name: 'username',\r\n          photo: 'photo'\r\n        },\r\n        messages: [\r\n          {\r\n            type: 'info',\r\n            text: 'infomessage'\r\n          },\r\n          {\r\n            type: 'success',\r\n            text: 'successmessage'\r\n          },\r\n          {\r\n            type: 'warn',\r\n            text: 'warnomessage'\r\n          }\r\n        ],\r\n        status: 'finished'\r\n      }\r\n    };\r\n    yield put(fetchJob(response.data));\r\n  }\r\n}\r\n\r\nexport function* watchJob() {\r\n  yield takeLatest(ActionConstants.REQUEST_JOB, requestJobAsync);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport { watchCollectJob } from './sagas/NewCollectJobSagas';\r\nimport { watchCleanJob } from './sagas/NewCleanJobSagas';\r\nimport { watchJobList } from './sagas/ManagerJobSagas';\r\nimport { watchTreeData } from './sagas/ManagerDataSagas';\r\nimport { watchUserList } from './sagas/ManagerUserSagas';\r\nimport { watchFunctionData } from './sagas/ManagerFunctionSagas';\r\nimport { watchJob } from './sagas/JobSagas';\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    watchCollectJob(),\r\n    watchCleanJob(),\r\n    watchJobList(),\r\n    watchTreeData(),\r\n    watchUserList(),\r\n    watchFunctionData(),\r\n    watchJob()\r\n  ]);\r\n}\r\n","const ALIAS = '/OpenDataMS-front';\r\n// 主页\r\nexport const Home = ALIAS + '/dashboard';\r\n\r\nexport const ROOT = ALIAS + '/';\r\n\r\n// 用户\r\nexport const USER = ALIAS + '/user';\r\nexport const USER_DETAIL = ALIAS + '/user/:userName';\r\nexport const USER_MANAGER = ALIAS + '/user/manager';\r\n\r\n// 任务管理\r\nexport const JOB = ALIAS + '/job';\r\nexport const JOB_DETAIL = ALIAS + '/job/:jobName';\r\nexport const JOB_NEW = ALIAS + '/job/new';\r\nexport const JOB_CURRENT = ALIAS + '/job/current';\r\nexport const JOB_MANAGER = ALIAS + '/job/manager';\r\n\r\n// 函数\r\nexport const FUNCTION = ALIAS + '/function';\r\nexport const FUNCTION_DETAIL = ALIAS + '/function/:functionName';\r\nexport const FUNCTION_NEW = ALIAS + '/function/regisite';\r\nexport const FUNCTION_MANAGER = ALIAS + '/function/manager';\r\n\r\n// 数据\r\nexport const DATA = ALIAS + '/data';\r\nexport const DATA_DETAIL = ALIAS + '/data/:id';\r\nexport const DATA_MANAGER = ALIAS + '/data/manager';\r\n\r\n// 图表\r\nexport const ICON = ALIAS + '/icon';","import React,{ Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tabs, Icon } from 'antd';\r\nimport {COLLECT_JOB,CLEAN_JOB} from '../../../constants/JobConstants';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\n/**\r\n * 任务标签，分为采集任务与清洗任务\r\n * @example\r\n * <JobTab pane_1={} pane_2={} />\r\n */\r\nexport default class JobTab extends Component {\r\n\r\n   /**\r\n   * 构建标签页组件参数：</br>\r\n   * pane_1- 容器组件1 </br>\r\n   * pane_2- 容器组件2 </br>\r\n   * @param {PropTypes.element.isRequired} pane_1\r\n   * @param {PropTypes.element.isRequired} pane_2\r\n   */\r\n  static propTypes = {\r\n    pane_1: PropTypes.element.isRequired,\r\n    pane_2: PropTypes.element.isRequired\r\n  };\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  render() {\r\n    return (\r\n      <Tabs className=\"jobtab\"\r\n          defaultActiveKey={COLLECT_JOB}\r\n      >\r\n        <TabPane key={COLLECT_JOB}\r\n            tab={<span><Icon type=\"apple\" />{COLLECT_JOB}</span>}\r\n        >\r\n          {this.props.pane_1}\r\n        </TabPane>\r\n        <TabPane key={CLEAN_JOB}\r\n            tab={<span><Icon type=\"android\" />{CLEAN_JOB}</span>}\r\n        >\r\n          {this.props.pane_2}\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}","export const COLLECT_JOB = '采集任务';\r\nexport const CLEAN_JOB = '清洗任务';","export const Validating = {\r\n  WARN: 'warning',\r\n  SUCCESS: 'success',\r\n  VALIDATE: 'validating',\r\n  ERROR: 'error',\r\n  NON:''\r\n};\r\n\r\nObject.freeze(Validating);","/**\r\n * 判断str是否为空string\r\n * @param {String} str\r\n * @returns {boolean}\r\n */\r\nexport const isBlank = (str) => {\r\n  if (str === null || str.length === 0) {\r\n    return true;\r\n  }\r\n  for (let ch in str) {\r\n    if (ch !== ' ') {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 判断str不为空string\r\n * @param {String} str\r\n * @returns {boolean}\r\n */\r\nexport const isNotBlank = (str) => {\r\n  return !isBlank(str);\r\n};","/**\r\n * 判断str不为空string\r\n * @param {Array} str\r\n * @returns {boolean}\r\n */\r\nexport const isEmpty = list => {\r\n  return list == null || list.length == 0;\r\n};\r\n\r\n/**占位 */\r\nexport const pass = 'pass';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Form, Select, Button, message } from 'antd';\r\nimport { Validating } from '../../../constants/EnumConstants';\r\nimport * as StringUtil from '../../../util/StringUtil';\r\nimport * as ListUtil from '../../../util/ListUtil';\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\n/**\r\n * 采集任务Form组件 </br>\r\n * 其中数据为异步获取\r\n * @example\r\n * const cityList = ['佛山', '哈尔滨', '贵州', '深圳'];\r\n * const dataList = ['全部', '水利工程数据', '特种兵数据', '**数据'];\r\n * <NewCleanJob cityList={cityList} dataList={dataList} />\r\n */\r\nexport default class NewCleanJob extends React.Component {\r\n  /**\r\n   * 构建组件参数\r\n   * @param {PropTypes.Array} cityList\r\n   * @param {PropTypes.Array} dataList\r\n   * @param {PropTypes.func} onSubmit\r\n   * @param {PropTypes.func} download\r\n   */\r\n  static propTypes = {\r\n    cityList: PropTypes.arrayOf(PropTypes.string),\r\n    dataList: PropTypes.arrayOf(PropTypes.string),\r\n    functionList: PropTypes.arrayOf(PropTypes.string),\r\n    dataColList: PropTypes.object,\r\n    onSubmit: PropTypes.func,\r\n    download: PropTypes.func\r\n  };\r\n  /**\r\n   * 组件默认值\r\n   * @param {null} cityList\r\n   * @param {null} dataList\r\n   * @param {null} onSubmit\r\n   * @param {null} download\r\n   */\r\n  static defaultProps = {\r\n    cityList: null,\r\n    dataList: null,\r\n    functionList: null,\r\n    dataColList: null,\r\n    onSubmit: null,\r\n    download: null\r\n  };\r\n\r\n  /**\r\n   * @member city 当前城市\r\n   * @member thread 线程数\r\n   * @member datas 数据项\r\n   * @member isSaveNative 是否保存至本地\r\n   * @member cityStatus 城市选择框状态\r\n   * @member dataStatus 数据项选择框状态\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      city: '',\r\n      thread: 1,\r\n      function: '',\r\n      dataCols: [],\r\n      datas: [],\r\n      isSaveNative: false,\r\n      functionStatus: Validating.NON,\r\n      dataColsStatus: Validating.NON,\r\n      cityStatus: Validating.NON,\r\n      dataStatus: Validating.NON\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.requestCityList();\r\n    this.props.requestFunctionList();\r\n  }\r\n\r\n  /**\r\n   *获取任务名称\r\n   *\r\n   * @memberof NewCleanJob\r\n   */\r\n  handleNameChange = e => {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取当前选中城市\r\n   *\r\n   * @memberof NewCleanJob\r\n   */\r\n  handleCityChange = value => {\r\n    if (StringUtil.isBlank(value)) {\r\n      this.setState({\r\n        cityStatus: Validating.NON\r\n      });\r\n      return;\r\n    }\r\n    this.props.requestDataList(value);\r\n    this.setState({\r\n      city: value,\r\n      cityStatus: Validating.SUCCESS\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取当前选中数据项\r\n   *\r\n   * @memberof NewCleanJob\r\n   */\r\n  handleDataChange = value => {\r\n    if (value === null || value.length === 0) {\r\n      this.setState({\r\n        dataStatus: Validating.WARN\r\n      });\r\n      return;\r\n    }\r\n    this.props.requestDataColList(value);\r\n    this.setState({\r\n      datas: value,\r\n      dataStatus: Validating.SUCCESS\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取当前选中数据项\r\n   *\r\n   * @memberof NewCleanJob\r\n   */\r\n  handlefunctionChange = value => {\r\n    if (value === null || value.length === 0) {\r\n      this.setState({\r\n        functionStatus: Validating.WARN\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      function: value,\r\n      functionStatus: Validating.SUCCESS\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取当前选中数据项\r\n   *\r\n   * @memberof NewCleanJob\r\n   */\r\n  handleDataColChange = value => {\r\n    if (value === null || value.length === 0) {\r\n      this.setState({\r\n        dataColsStatus: Validating.WARN\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      dataCols: value,\r\n      dataColsStatus: Validating.SUCCESS\r\n    });\r\n  };\r\n\r\n  /**\r\n   *判断state是否为空\r\n   *\r\n   * @memberof NewCleanJob\r\n   */\r\n  handleCheckString = key => {\r\n    if (StringUtil.isBlank(this.state[key])) {\r\n      this.setState({\r\n        [key + 'Status']: Validating.ERROR\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   *判断state是否为空\r\n   *setState方法中的key传递为字符串了\r\n   * @memberof NewCleanJob\r\n   */\r\n  handleCheckList = key => {\r\n    if (ListUtil.isEmpty(this.state[key])) {\r\n      this.setState({\r\n        [key + 'Status']: Validating.ERROR\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   *验证并提交form数据\r\n   *\r\n   * @memberof NewCleanJob\r\n   */\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.handleCheckString('city') |\r\n      this.handleCheckList('datas') |\r\n      this.handleCheckString('function') |\r\n      this.handleCheckList('dataCols')\r\n    ) {\r\n      return;\r\n    }\r\n    this.props.submitJob({\r\n      name: this.state.name,\r\n      city: this.state.city,\r\n      thread: this.state.thread,\r\n      datas: this.state.datas,\r\n      function: this.state.function,\r\n      dataCols: this.state.dataCols,\r\n      isSaveNative: this.state.isSaveNative\r\n    });\r\n  };\r\n\r\n  /**\r\n   *重置表單\r\n   *\r\n   * @memberof NewCleanJob\r\n   */\r\n  handleReset = () => {};\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  render() {\r\n    if (this.props.message) {\r\n      if (this.props.success) {\r\n        message.success(this.props.message);\r\n      } else {\r\n        message.error(this.props.message);\r\n      }\r\n    }\r\n    /**\r\n     * 数据列下拉菜单，以数据项分组\r\n     */\r\n    const dataColOptions = [];\r\n    if (this.props.dataColList) {\r\n      const dataColList = this.props.dataColList;\r\n      for (let key in dataColList) {\r\n        let optGroups = [];\r\n        for (let item of dataColList[key]) {\r\n          optGroups.push(\r\n            <Option key={key + '.' + item}\r\n                value={key + '.' + item}\r\n            >\r\n              {key + '.' + item}\r\n            </Option>\r\n          );\r\n        }\r\n        dataColOptions.push(\r\n          <OptGroup key={key}\r\n              label={key}\r\n          >\r\n            {optGroups}\r\n          </OptGroup>\r\n        );\r\n      }\r\n    }\r\n    const formItemLayout = {\r\n      labelCol: { span: 9 },\r\n      wrapperCol: { span: 8 }\r\n    };\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Item {...formItemLayout}\r\n            label=\"任务名称\"\r\n        >\r\n          <Input\r\n              onChange={this.handleNameChange}\r\n              placeholder=\"input placeholder\"\r\n              value={this.state.name}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n            {...formItemLayout}\r\n            hasFeedback\r\n            label=\"数据项\"\r\n            validateStatus={\r\n            this.props.cityStatus\r\n              ? Validating.VALIDATE\r\n              : this.state.cityStatus\r\n          }\r\n        >\r\n          <Select\r\n              hasFeedback\r\n              onChange={this.handleCityChange}\r\n              placeholder=\"Please select a city\"\r\n          >\r\n            {this.props.cityList &&\r\n              this.props.cityList.map(city => {\r\n                return (\r\n                  <Option key={city}\r\n                      value={city}\r\n                  >\r\n                    {city}\r\n                  </Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Form.Item>\r\n        {this.state.city && (\r\n          <Form.Item\r\n              {...{ wrapperCol: { offset: 9, span: 8 } }}\r\n              hasFeedback\r\n              validateStatus={\r\n              this.props.dataStatus\r\n                ? Validating.VALIDATE\r\n                : this.state.dataStatus\r\n            }\r\n          >\r\n            <Select\r\n                hasFeedback\r\n                mode=\"multiple\"\r\n                onChange={this.handleDataChange}\r\n                placeholder=\"Please select target data\"\r\n            >\r\n              {this.props.dataList &&\r\n                this.props.dataList.map(item => {\r\n                  return (\r\n                    <Option key={item}\r\n                        value={item}\r\n                    >\r\n                      {item}\r\n                    </Option>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n        <Form.Item\r\n            {...formItemLayout}\r\n            hasFeedback\r\n            label=\"函数\"\r\n            validateStatus={\r\n            this.props.functionStatus\r\n              ? Validating.VALIDATE\r\n              : this.state.functionStatus\r\n          }\r\n        >\r\n          <Select\r\n              hasFeedback\r\n              onChange={this.handlefunctionChange}\r\n              placeholder=\"Please select funciton\"\r\n          >\r\n            {this.props.functionList &&\r\n              this.props.functionList.map(item => {\r\n                return (\r\n                  <Option key={item}\r\n                      value={item}\r\n                  >\r\n                    {item}\r\n                  </Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            {...formItemLayout}\r\n            hasFeedback\r\n            label=\"数据列\"\r\n            validateStatus={\r\n            this.props.dataColsStatus\r\n              ? Validating.VALIDATE\r\n              : this.state.dataColsStatus\r\n          }\r\n        >\r\n          <Select\r\n              hasFeedback\r\n              mode=\"multiple\"\r\n              onChange={this.handleDataColChange}\r\n              placeholder=\"Please select target data\"\r\n          >\r\n            {dataColOptions}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 7, offset: 8 }}>\r\n          <Button htmlType=\"submit\"\r\n              style={{ margin: 10 }}\r\n              type=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n              htmlType=\"reset\"\r\n              onClick={this.handleReset}\r\n              style={{ margin: 10 }}\r\n              type=\"danger\"\r\n          >\r\n            重置\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport NewCleanJob from '../../components/job/newJob/NewCleanJob';\r\nimport * as NewCleanJobActions from '../../redux/actions/NewCleanJobActions';\r\n\r\nconst mapStateToProps = state => {\r\n  const data = state.NewCleanJobReducers;\r\n  const succenninfo = state.Reducer;\r\n  return {\r\n    cityStatus: data.cleanCityStatus,\r\n    dataStatus: data.cleanDataStatus,\r\n    cityList: data.cleanCityList,\r\n    dataList: data.cleanDataList,\r\n    functionList:data.functionList,\r\n    dataColList:data.dataColList,\r\n    success: succenninfo.success,\r\n    message: succenninfo.message\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    requestCityList: () => dispatch(NewCleanJobActions.requestCleanCityList()),\r\n    requestDataList: city => dispatch(NewCleanJobActions.requestCleanDataList(city)),\r\n    requestFunctionList: () => dispatch(NewCleanJobActions.requestFunctionList()),\r\n    requestDataColList: city => dispatch(NewCleanJobActions.requestDataColList(city)),\r\n    submitJob: job => dispatch(NewCleanJobActions.submitCleanJob(job))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NewCleanJob);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Input,\r\n  Form,\r\n  Select,\r\n  Switch,\r\n  Radio,\r\n  Button,\r\n  Upload,\r\n  Icon,\r\n  Row,\r\n  Col,\r\n  InputNumber,\r\n  message\r\n} from 'antd';\r\nimport { Validating } from '../../../constants/EnumConstants';\r\nimport * as StringUtil from '../../../util/StringUtil';\r\nimport * as ListUtil from '../../../util/ListUtil';\r\n\r\nconst { Option } = Select;\r\n\r\n/**\r\n * 采集任务Form组件 </br>\r\n * 其中数据为异步获取\r\n * @example\r\n * const cityList = ['佛山', '哈尔滨', '贵州', '深圳'];\r\n * const dataList = ['全部', '水利工程数据', '特种兵数据', '**数据'];\r\n * <NewCollectJob cityList={cityList} dataList={dataList} />\r\n */\r\nexport default class NewCollectJob extends React.Component {\r\n  /**\r\n   * 构建组件参数\r\n   * @param {PropTypes.Array} cityList\r\n   * @param {PropTypes.Array} dataList\r\n   * @param {PropTypes.func} onSubmit\r\n   * @param {PropTypes.func} download\r\n   */\r\n  static propTypes = {\r\n    cityList: PropTypes.arrayOf(PropTypes.string),\r\n    dataList: PropTypes.arrayOf(PropTypes.string),\r\n    onSubmit: PropTypes.func,\r\n    download: PropTypes.func\r\n  };\r\n  /**\r\n   * 组件默认值\r\n   * @param {null} cityList\r\n   * @param {null} dataList\r\n   * @param {null} onSubmit\r\n   * @param {null} download\r\n   */\r\n  static defaultProps = {\r\n    cityList: null,\r\n    dataList: null,\r\n    onSubmit: null,\r\n    download: null\r\n  };\r\n\r\n  /**\r\n   * @member city 当前城市\r\n   * @member thread 线程数\r\n   * @member datas 数据项\r\n   * @member isSaveNative 是否保存至本地\r\n   * @member cityStatus 城市选择框状态\r\n   * @member datasStatus 数据项选择框状态\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      city: '',\r\n      thread: 1,\r\n      datas: [],\r\n      isSaveNative: false,\r\n      cityStatus: Validating.NON,\r\n      datasStatus: Validating.NON\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.requestCityList();\r\n  }\r\n\r\n  /**\r\n   *获取任务名称\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleNameChange = e => {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取当前选中城市\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleCityChange = value => {\r\n    if (StringUtil.isBlank(value)) {\r\n      this.setState({\r\n        cityStatus: Validating.NON\r\n      });\r\n      return;\r\n    }\r\n    this.props.requestDataList(value);\r\n    this.setState({\r\n      city: value,\r\n      cityStatus: Validating.SUCCESS\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取当前选中数据项\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleDataChange = value => {\r\n    if (value === null || value.length === 0) {\r\n      this.setState({\r\n        datasStatus: Validating.WARN\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      datas: value,\r\n      datasStatus: Validating.SUCCESS\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取当前输入线程数\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleThreadChange = e => {\r\n    this.setState({\r\n      thread: e.target.value\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取falg是否保存原始数据\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleNativeChange = value => {\r\n    this.setState({\r\n      isSaveNative: value\r\n    });\r\n  };\r\n\r\n  /**\r\n   *获取下载数据路径\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  saveOrigin = e => {\r\n    this.props.download(e);\r\n  };\r\n\r\n  /**\r\n   *判断state是否为空\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleCheckString = key => {\r\n    if (StringUtil.isBlank(this.state[key])) {\r\n      this.setState({\r\n        [key + 'Status']: Validating.ERROR\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   *判断state是否为空\r\n   *setState方法中的key传递为字符串了\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleCheckList = key => {\r\n    if (ListUtil.isEmpty(this.state[key])) {\r\n      this.setState({\r\n        [key + 'Status']: Validating.ERROR\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   *验证并提交form数据\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.handleCheckString('city') | this.handleCheckList('datas')) {\r\n      return;\r\n    }\r\n    this.props.submitJob({\r\n      name: this.state.name,\r\n      city: this.state.city,\r\n      thread: this.state.thread,\r\n      datas: this.state.datas,\r\n      isSaveNative: this.state.isSaveNative\r\n    });\r\n  };\r\n\r\n  /**\r\n   *重置表單\r\n   *\r\n   * @memberof NewCollectJob\r\n   */\r\n  handleReset = () => {};\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  render() {\r\n    if (this.props.message) {\r\n      if (this.props.success) {\r\n        message.success(this.props.message);\r\n      } else {\r\n        message.error(this.props.message);\r\n      }\r\n    }\r\n    const formItemLayout = {\r\n      labelCol: { span: 9 },\r\n      wrapperCol: { span: 8 }\r\n    };\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Item {...formItemLayout}\r\n            label=\"任务名称\"\r\n        >\r\n          <Input\r\n              onChange={this.handleNameChange}\r\n              placeholder=\"input placeholder\"\r\n              value={this.state.name}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n            {...formItemLayout}\r\n            hasFeedback\r\n            label=\"城市\"\r\n            validateStatus={\r\n            this.props.cityStatus\r\n              ? Validating.VALIDATE\r\n              : this.state.cityStatus\r\n          }\r\n        >\r\n          <Select\r\n              hasFeedback\r\n              onChange={this.handleCityChange}\r\n              placeholder=\"Please select a city\"\r\n          >\r\n            {this.props.cityList &&\r\n              this.props.cityList.map(city => {\r\n                return (\r\n                  <Option key={city}\r\n                      value={city}\r\n                  >\r\n                    {city}\r\n                  </Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            {...formItemLayout}\r\n            hasFeedback\r\n            label=\"数据项\"\r\n            validateStatus={\r\n            this.props.datasStatus\r\n              ? Validating.VALIDATE\r\n              : this.state.datasStatus\r\n          }\r\n        >\r\n          <Select\r\n              hasFeedback\r\n              mode=\"multiple\"\r\n              onChange={this.handleDataChange}\r\n              placeholder=\"Please select target data\"\r\n          >\r\n            {this.props.dataList &&\r\n              this.props.dataList.map(item => {\r\n                return (\r\n                  <Option key={item}\r\n                      value={item}\r\n                  >\r\n                    {item}\r\n                  </Option>\r\n                );\r\n              })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item {...formItemLayout}\r\n            label=\"运行线程\"\r\n        >\r\n          <Radio.Group\r\n              onChange={this.handleThreadChange}\r\n              value={this.state.thread}\r\n          >\r\n            <Radio value={1}>单线程</Radio>\r\n            <Radio value={2}>多线程</Radio>\r\n          </Radio.Group>\r\n          {this.state.thread > 1 && (\r\n            <div>\r\n              <span>线程数: </span>\r\n              <InputNumber\r\n                  defaultValue={3}\r\n                  max={10}\r\n                  min={1}\r\n                  onChange={this.handleThreadChange}\r\n              />\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Row>\r\n            <Col md={7}\r\n                sm={7}\r\n                xl={7}\r\n                xs={0}\r\n            />\r\n            <Col md={8}\r\n                sm={8}\r\n                xl={8}\r\n                xs={8}\r\n            >\r\n              <Switch onChange={this.handleNativeChange} />\r\n              <span style={{ marginRight: '40px', marginLeft: '10px' }}>\r\n                {' '}\r\n                保存至本地{' '}\r\n              </span>\r\n              {this.state.isSaveNative && (\r\n                <Upload\r\n                    action=\"/download.do\"\r\n                    listType=\"picture\"\r\n                    name=\"logo\"\r\n                    onChange={this.saveOrigin}\r\n                >\r\n                  <Button>\r\n                    <Icon type=\"download\" /> save\r\n                  </Button>\r\n                </Upload>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 7, offset: 8 }}>\r\n          <Button htmlType=\"submit\"\r\n              style={{ margin: 10 }}\r\n              type=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n              htmlType=\"reset\"\r\n              onClick={this.handleReset}\r\n              style={{ margin: 10 }}\r\n              type=\"danger\"\r\n          >\r\n            重置\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport NewCollectJob from '../../components/job/newJob/NewCollectJob';\r\nimport * as NewCollectJobActions from '../../redux/actions/NewCollectJobActions';\r\n\r\nconst mapStateToProps = state => {\r\n  const data = state.NewCollectJobReducers;\r\n  const succenninfo = state.Reducer;\r\n  return {\r\n    cityStatus: data.collectCityStatus,\r\n    dataStatus: data.collectDataStatus,\r\n    cityList: data.collectCityList,\r\n    dataList: data.collectDataList,\r\n    success: succenninfo.success,\r\n    message: succenninfo.message\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    requestCityList: () => dispatch(NewCollectJobActions.requestCollectCityList()),\r\n    requestDataList: city => dispatch(NewCollectJobActions.requestCollectDataList(city)),\r\n    requestDownloadPath: () => dispatch(NewCollectJobActions.download()),\r\n    submitJob: job => dispatch(NewCollectJobActions.submitCollectJob(job))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NewCollectJob);","import JobTab from '../../components/job/newJob/JobTab';\r\nimport React,{ Component } from 'react';\r\nimport NewCleanJob from './NewCleanJob';\r\nimport NewCollectJob from './NewCollectJob';\r\n\r\nexport default class NewJob extends Component{\r\n  render(){\r\n    return(\r\n      <JobTab pane_1={<NewCollectJob />}\r\n          pane_2={<NewCleanJob />}\r\n      />\r\n    );\r\n  }\r\n}","import { ICON } from './routerConstants';\r\nconst requireContext = require.context('../assets/icon', true, /^\\.\\/.*\\.*$/);\r\nconst IconTypesMap = {};\r\nrequireContext.keys().map(i => {\r\n  let type = i.match(/^.*\\/(.*)\\..*$/);\r\n  IconTypesMap[type[1]] = ICON + '/' + i;\r\n  return {\r\n    type: type[1],\r\n    path: ICON + '/' + i\r\n  };\r\n});\r\n\r\nexport default IconTypesMap;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconTypesMap from '../../constants/ImageConstants';\r\n\r\n/**\r\n * NativeIcon\r\n * 本地图标组件\r\n * @example\r\n * <NativeIcon type=\"new\" />\r\n * <NativeIcon width={20} height={20} type=\"new\" alt=\"new\"/>\r\n */\r\nexport default class NativeIcon extends React.Component {\r\n  /**\r\n   * 构建图标组件参数: </br>\r\n   * width- 宽度、 </br>\r\n   * height- 高度、 </br>\r\n   * className- css Class、 </br>\r\n   * type- 图标样式，此处为图标引入文件的名称、 </br>\r\n   * alt- 填充字体 </br>\r\n   * @param {PropTypes.number} width\r\n   * @param {PropTypes.number} height\r\n   * @param {PropTypes.string} className\r\n   * @param {PropTypes.string.isRequired} type\r\n   * @param {PropTypes.string} alt\r\n   */\r\n  static propTypes = {\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    className: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    alt: PropTypes.string\r\n  };\r\n\r\n  /**\r\n   * 图标组件默认值\r\n   * @param {56} width - 宽度\r\n   * @param {56} height - 高度\r\n   * @param {'icons'} className - 样式类\r\n   * @param {''} alt - 填充文字\r\n   */\r\n  static defaultProps = {\r\n    width: 56,\r\n    height: 56,\r\n    className: 'icons',\r\n    alt: ''\r\n  };\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  render() {\r\n    const path = IconTypesMap[this.props.type];\r\n    return (\r\n      <img\r\n          alt={this.props.alt}\r\n          className={this.props.className}\r\n          src={path}\r\n          style={{ width: this.props.width, height: this.props.height }}\r\n          type={this.props.type}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport { Divider, Tag, Avatar, Row, Col } from 'antd';\r\nimport NativeIcon from '../icons/NativeIcon';\r\nimport * as routerConstants from '../../constants/routerConstants';\r\n\r\n/**\r\n * 常量 不同的状态颜色映射\r\n */\r\nconst statusStyle = {\r\n  pending: 'orange',\r\n  finished: 'green',\r\n  running: 'blue',\r\n  failed: 'red'\r\n};\r\n\r\n/**\r\n * 组件 状态栏\r\n */\r\n\r\nclass StatusTab extends Component {\r\n  /**\r\n   * 构成组件参数：\r\n   * job 任务对象\r\n   * action 操作\r\n   * offset tab偏移\r\n   * underLine 下划线\r\n   */\r\n  static propTypes = {\r\n    job: PropTypes.shape({\r\n      status: PropTypes.string,\r\n      data: PropTypes.string,\r\n      name: PropTypes.string,\r\n      created: PropTypes.string,\r\n      creator: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        photo: PropTypes.string\r\n      }),\r\n      completed: PropTypes.string\r\n    }),\r\n    action: PropTypes.element,\r\n    offset: PropTypes.number,\r\n    underLine: PropTypes.bool,\r\n    isDetail: PropTypes.bool\r\n  };\r\n  static defaultProps = {\r\n    job: {\r\n      status: 'pending',\r\n      name: 'name',\r\n      created: 'created',\r\n      creator: {\r\n        name: 'username',\r\n        photo: 'user'\r\n      },\r\n      data: 'data',\r\n      completed: 'completed'\r\n    },\r\n    offset: 4,\r\n    action: null,\r\n    underLine: false,\r\n    isDetail: false\r\n  };\r\n\r\n  handleClick = path => {\r\n    this.props.history.push(path);\r\n  };\r\n  /**\r\n   * 可做手机适应，屏小时选择列式展示\r\n   */\r\n  render() {\r\n    const { job, offset, action, underLine } = this.props;\r\n    return (\r\n      <div className=\"status-bar\">\r\n        <Divider className=\"divider\" />\r\n        <Row>\r\n          <span className=\"status-bar-content\">\r\n            <Col span={2}>\r\n              <span style={{ marginRight: offset }}>\r\n                <a\r\n                    onClick={this.handleClick.bind(\r\n                    this,\r\n                    routerConstants.JOB + '/' + job.name\r\n                  )}\r\n                >\r\n                  <Tag color={statusStyle[job.status]}>{job.status}</Tag>\r\n                </a>\r\n              </span>\r\n            </Col>\r\n\r\n            <Col span={3}>\r\n              <span style={{ marginRight: offset }}>\r\n                <a\r\n                    onClick={this.handleClick.bind(\r\n                    this,\r\n                    routerConstants.JOB + '/' + job.name\r\n                  )}\r\n                >\r\n                  <span>#{job.name}</span>\r\n                </a>\r\n              </span>\r\n            </Col>\r\n\r\n            {this.props.isDetail && (\r\n              <Col span={3}>\r\n                <span style={{ marginRight: offset }}>\r\n                  <a\r\n                      onClick={this.handleClick.bind(\r\n                      this,\r\n                      routerConstants.DATA + '/' + job.data\r\n                    )}\r\n                  >\r\n                    <span>{job.data}</span>\r\n                  </a>\r\n                </span>\r\n              </Col>\r\n            )}\r\n\r\n            <Col span={3}>\r\n              <span\r\n                  onClick={this.handleClick.bind(\r\n                  this,\r\n                  routerConstants.USER + '/' + job.creator.name\r\n                )}\r\n                  style={{ marginRight: offset }}\r\n              >\r\n                <Avatar\r\n                    icon={job.creator.photo}\r\n                    size=\"small\"\r\n                    style={{ margin: '4px' }}\r\n                />\r\n                <span>{job.creator.name}</span>\r\n              </span>\r\n            </Col>\r\n\r\n            <Col span={3}>\r\n              <span style={{ marginRight: offset }}>\r\n                <NativeIcon height={20}\r\n                    type=\"clock\"\r\n                    width={20}\r\n                />\r\n                <span>{job.created}</span>\r\n              </span>\r\n            </Col>\r\n\r\n            {this.props.isDetail && (\r\n              <Col span={3}>\r\n                <span style={{ marginRight: offset }}>\r\n                  <NativeIcon height={20}\r\n                      type=\"clock\"\r\n                      width={20}\r\n                  />\r\n                  <span>{job.created}</span>\r\n                </span>\r\n              </Col>\r\n            )}\r\n          </span>\r\n          <Col offset={this.props.isDetail? 3 : 8}\r\n              span={3}\r\n          >\r\n            <span className=\"tab-right\">{action}</span>\r\n          </Col>\r\n        </Row>\r\n\r\n        {underLine && <Divider className=\"divider\" />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(StatusTab);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class BaseMessage extends Component {\r\n  static propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    prefix: PropTypes.string\r\n  };\r\n  static defaultProps = {\r\n    className: '',\r\n    color: '#e1ffe8',\r\n    prefix: ''\r\n  };\r\n  render() {\r\n    return (\r\n      <span\r\n          className={this.props.className}\r\n          style={{ color: this.props.color }}\r\n      >\r\n        {this.props.prefix + this.props.message}\r\n        <br />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseMessage from './BaseMessage';\r\n\r\nconst PREFIX = ' [Info] -- ';\r\n\r\nexport default class InfoMessage extends Component {\r\n  static propTypes = {\r\n    message: PropTypes.string.isRequired\r\n  };\r\n  render() {\r\n    return <BaseMessage message={this.props.message}\r\n        prefix={PREFIX}\r\n           />;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseMessage from './BaseMessage';\r\n\r\nconst PREFIX = ' [Success] -- ';\r\nexport default class SuccessMessage extends Component {\r\n  static propTypes = {\r\n    message: PropTypes.string.isRequired\r\n  };\r\n  render() {\r\n    return (\r\n      <BaseMessage\r\n          className={'term-fg-l-green term-bold'}\r\n          color={'#00d600'}\r\n          message={this.props.message}\r\n          prefix={PREFIX}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseMessage from './BaseMessage';\r\n\r\nconst PREFIX = ' [Failed] -- ';\r\n\r\nexport default class FailedMessage extends Component {\r\n  static propTypes = {\r\n    message: PropTypes.string.isRequired\r\n  };\r\n  render() {\r\n    return (\r\n      <BaseMessage color={'red'}\r\n          message={this.props.message}\r\n          prefix={PREFIX}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InfoMessage from '../message/InfoMessage';\r\nimport SuccessMessage from '../message/SuccessMessage';\r\nimport FailedMessage from '../message/FailedMessage';\r\n\r\n/**\r\n * 实时消息窗口组件\r\n */\r\nexport default class MessageWindow extends Component {\r\n  /**\r\n   * 组件构成参数：\r\n   * message 实时消息\r\n   */\r\n  static propTypes = {\r\n    messages: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        type: PropTypes.string,\r\n        text: PropTypes.string\r\n      })\r\n    )\r\n  };\r\n  static defaultProps = {\r\n    messages: [{\r\n      type:'info',\r\n      text:''\r\n    }]\r\n  };\r\n\r\n  render() {\r\n    /**\r\n     * info message 浅白\r\n     * warn message red\r\n     * command green\r\n     * success message green\r\n     */\r\n    return (\r\n      <div className=\"message-window\">\r\n        <pre className=\"build-trace\"\r\n            id=\"build-trace\"\r\n        >\r\n          <code className=\"bash js-build-output\">\r\n            {this.props.messages.map((message,index) => {\r\n              switch (message.type) {\r\n                case 'success':\r\n                case 'command':\r\n                  return <SuccessMessage key={index+''}\r\n                      message={message.text}\r\n                         />;\r\n                case 'warn':\r\n                  return <FailedMessage key={index+''}\r\n                      message={message.text}\r\n                         />;\r\n                case 'info':\r\n                  return <InfoMessage key={index+''}\r\n                      message={message.text}\r\n                         />;\r\n                default:\r\n                  return message.text;\r\n              }\r\n            })}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatusTab from '../StatusTab';\r\nimport MessageWindow from './MessageWindow';\r\nimport { Button, Spin } from 'antd';\r\n\r\n/**\r\n * 当前任务组件\r\n */\r\nexport default class CurrentJob extends Component {\r\n  /**\r\n   * 构成组件参数：\r\n   *  messages:[] 实时消息序列\r\n   *  status: [] 标识实时消息传输结束\r\n   */\r\n  static propTypes = {\r\n    // jobName: PropTypes.string.isRequired,\r\n    requestJob: PropTypes.func.isRequired,\r\n    job: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      created: PropTypes.string,\r\n      creator: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        photo: PropTypes.string\r\n      }),\r\n      status: PropTypes.string,\r\n      messages: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          type: PropTypes.string,\r\n          text: PropTypes.string\r\n        })\r\n      )\r\n    })\r\n  };\r\n  static defaultProps = {\r\n    job: {\r\n      name: 'jobNname',\r\n      created: '20190101',\r\n      creator: {\r\n        name: 'username',\r\n        photo: 'photo'\r\n      },\r\n      messages: [],\r\n      status: 'pending'\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @member messages 实时消息序列\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      job:\r\n        props.match.params && props.match.params.jobName\r\n          ? props.match.params.jobName\r\n          : 'currentJob'\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.requestJob(this.state.job);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Spin spinning={this.props.loadStatus}>\r\n          <StatusTab\r\n              action={\r\n              <Button size=\"small\"\r\n                  type=\"primary\"\r\n              >\r\n                Retry\r\n              </Button>\r\n            }\r\n              job={this.props.job}\r\n              offset={15}\r\n          />\r\n          <MessageWindow messages={this.props.job.messages} />\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport Job from '../../components/job/jobPage/Job';\r\nimport { requestJob } from '../../redux/actions/JobActions';\r\n\r\nconst mapStateToProps = state => {\r\n  const data = state.JobReducers;\r\n  return {\r\n    job: data.job,\r\n    loadStatus: data.loadStatus\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    requestJob: jobName => {\r\n      dispatch(requestJob(jobName));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Job);\r\n","import React from 'react';\r\nconst User = ({ match }) => {\r\n  return (\r\n    <div>\r\n      <h2>user: {match.params.userName}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nconst Data = ({ match }) => {\r\n  return (\r\n    <div>\r\n      <h2>data: {match.params.id}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Data;\r\n","import React from 'react';\r\nconst Function = ({ match }) => {\r\n  return (\r\n    <div>\r\n      <h2>function: {match.params.functionName}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Function;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatusTab from '../StatusTab';\r\nimport { Button, Empty, Pagination, Divider } from 'antd';\r\n\r\n/**\r\n * 常量\r\n * 标签头部 名称\r\n */\r\nconst tabs = ['状态', '名称', '数据', '创建人', '创建时间', '完成时间'];\r\nconst tabSize = tabs.length - 1;\r\nconst LeftWrapper = 200;\r\n\r\n/**\r\n * 组件：任务列表\r\n */\r\nexport default class JobList extends Component {\r\n  /**\r\n   * 构成组件参数：\r\n   * jobList 任务列表数据\r\n   * totalJob 任务总数\r\n   */\r\n  static propTypes = {\r\n    jobList: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        status: PropTypes.string,\r\n        name: PropTypes.string,\r\n        data: PropTypes.string,\r\n        creator: PropTypes.object,\r\n        created: PropTypes.string,\r\n        completed: PropTypes.string\r\n      })\r\n    ),\r\n    totalJob: PropTypes.number\r\n  };\r\n\r\n  static defaultProps = {\r\n    jobList: [],\r\n    totalJob: 0\r\n  };\r\n\r\n  /**\r\n   * @member {number} offset - 位置偏移\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      offset: document.body.offsetWidth / tabSize - LeftWrapper\r\n    };\r\n    this.onWindowResize = this.onWindowResize.bind(this);\r\n  }\r\n\r\n  /**\r\n   * 组件渲染之后监听窗口\r\n   */\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onWindowResize);\r\n  }\r\n\r\n  /**\r\n   * 窗口变化时，组件大小也进行改变\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onWindowResize);\r\n  }\r\n\r\n  /**\r\n   * 监听窗口实时调整offset\r\n   */\r\n  onWindowResize() {\r\n    this.setState({\r\n      offset: document.body.offsetWidth / tabSize - LeftWrapper\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"joblist\">\r\n        <div className=\"jobtab\">\r\n          {tabs.map(tab => (\r\n            <span key={tab}\r\n                style={{ marginRight: this.state.offset + 20 }}\r\n            >\r\n              {tab}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        {this.props.jobList && this.props.jobList.length > 0 ? (\r\n          this.props.jobList.map((job, index) => (\r\n            <StatusTab\r\n                action={\r\n                <div>\r\n                  <Button type=\"default\">Retry</Button>\r\n                  <Button type=\"danger\">delete</Button>\r\n                </div>\r\n              }\r\n                isDetail\r\n                job={job}\r\n                key={job.name + index}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Empty />\r\n        )}\r\n        {this.props.jobList && this.props.jobList.length > 0 && (\r\n          <div>\r\n            <Divider className=\"divider\" />\r\n            <Pagination\r\n                defaultCurrent={1}\r\n                pageSize={10}\r\n                total={this.props.totalJob}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * NumberIcon\r\n * 数字图标组件\r\n * @example\r\n * <NumberIcon number=10 />\r\n */\r\nexport default class NumberIcon extends React.Component {\r\n  /**\r\n   * 构建组件参数: </br>\r\n   * number: 图标展示数字\r\n   * @param {PropTypes.number} number\r\n   */\r\n  static propTypes = {\r\n    number: PropTypes.number\r\n  };\r\n\r\n  /**\r\n   * 组件默认值: </br>\r\n   * number: 图标展示数字\r\n   * @param {0} number\r\n   */\r\n  static defaultProps = {\r\n    number: 0\r\n  };\r\n\r\n   /**\r\n   * @ignore\r\n   */\r\n  render() {\r\n    return <div className=\"number-icon\">{this.props.number}</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spin, Tabs } from 'antd';\r\nimport JobList from './JobList';\r\nimport NumberIcon from '../../icons/NumberIcon';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst tabs = [\r\n  { text: '所有任务', key: 'All' },\r\n  { text: '待定任务', key: 'Pending' },\r\n  { text: '运行中任务', key: 'Runing' },\r\n  { text: '已完成任务', key: 'Finished' }\r\n];\r\n\r\n/**\r\n * 任务管理组件\r\n * 构成组件参数：\r\n * jobList\r\n * countlist\r\n * requestJobList\r\n * @param {Array}  jobList\r\n * @param {Object} countlist\r\n * @param {func} requestJobList\r\n */\r\nexport default class ManagerJob extends Component {\r\n  static propTypes = {\r\n    jobList: PropTypes.arrayOf(PropTypes.object),\r\n    countList: PropTypes.shape({\r\n      All: PropTypes.number,\r\n      Pending: PropTypes.number,\r\n      Runing: PropTypes.number,\r\n      Finished: PropTypes.number\r\n    }),\r\n    requestJobList: PropTypes.func.isRequired\r\n  };\r\n  static defaultProps = {\r\n    jobList: [],\r\n    countList: {}\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.requestJobList({\r\n      type: 'All',\r\n      page: 0,\r\n      size: 20\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 选中tab处理\r\n   */\r\n  handerTab = tab => {\r\n    this.props.requestJobList(tab);\r\n  };\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  render() {\r\n    return (\r\n      <Spin spinning={this.props.loadStatus}>\r\n        <Tabs\r\n            className=\"ManagerJob\"\r\n            defaultActiveKey=\"All\"\r\n            onChange={this.handerTab}\r\n        >\r\n          {tabs.map(tab => (\r\n            <TabPane\r\n                key={tab.key}\r\n                tab={\r\n                <span>\r\n                  {tab.text}\r\n                  <NumberIcon number={this.props.countList[tab.key]} />\r\n                </span>\r\n              }\r\n            >\r\n              <JobList jobList={this.props.jobList} />\r\n            </TabPane>\r\n          ))}\r\n        </Tabs>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport ManagerJob from '../../components/job/managerJob/ManagerJob';\r\nimport * as ManagerJobActions from '../../redux/actions/ManagerJobActions';\r\n\r\nconst mapStateToProps = state => {\r\n  const data = state.ManagerJobReducers;\r\n  return {\r\n    loadStatus: data.loadStatus,\r\n    jobList: data.jobList,\r\n    countList: data.countList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    requestJobList: param => dispatch(ManagerJobActions.requestJobList(param))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerJob);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Form, Button, Upload, Icon, Switch, Col, message } from 'antd';\r\nimport { Validating } from '../../constants/EnumConstants';\r\nimport * as StringUtil from '../../util/StringUtil';\r\n\r\nexport default class FunctionRegister extends React.Component {\r\n  static propTypes = {\r\n    submitFunction: PropTypes.func.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      functionName: '',\r\n      sourceName: '',\r\n      isCoverSource: false,\r\n      source: '',\r\n      functionNameStatus: Validating.NON,\r\n      sourceNameStatus: Validating.NON,\r\n      sourceStatus: Validating.NON\r\n    };\r\n  }\r\n\r\n  handleCoverSource = () => {\r\n    this.setState({\r\n      isCoverSource: !this.state.isCoverSource\r\n    });\r\n  };\r\n\r\n  handleUpload = info => {\r\n    const status = info.file.status;\r\n    if (status !== 'uploading') {\r\n      console.log(info);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  };\r\n\r\n  handleFunctionInput = e => {\r\n    this.setState({\r\n      functionName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSourceInput = e => {\r\n    this.setState({\r\n      sourceName: e.target.value\r\n    });\r\n  };\r\n\r\n  /**\r\n   *判断state是否为空\r\n   */\r\n  handleCheckString = key => {\r\n    if (StringUtil.isBlank(this.state[key])) {\r\n      this.setState({\r\n        [key + 'Status']: Validating.ERROR\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.handleCheckString('functionName') |\r\n      this.handleCheckString('sourceName') |\r\n      this.handleCheckString('source')\r\n    ) {\r\n      return;\r\n    }\r\n    this.props.submitFunction({\r\n      name: this.state.functionName,\r\n      sourceName: this.state.sourceName,\r\n      source: this.state.source,\r\n      isCoverSource: this.state.isCoverSource\r\n    });\r\n  };\r\n  handleReset = () => {};\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 7 },\r\n      wrapperCol: { span: 8 }\r\n    };\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Item\r\n            {...formItemLayout}\r\n            hasFeedback\r\n            label=\"注册函数名\"\r\n            validateStatus={this.state.functionNameStatus}\r\n        >\r\n          <Input\r\n              onChange={this.handleFunctionInput}\r\n              placeholder=\"输入注册函数名称！\"\r\n              value={this.state.functionName}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            {...formItemLayout}\r\n            hasFeedback\r\n            label=\"关联资源包类名\"\r\n            validateStatus={this.state.sourceNameStatus}\r\n        >\r\n          <Input\r\n              onChange={this.handleSourceInput}\r\n              placeholder=\"输入关联资源包类名！ 如： com.demo.UdfTest\"\r\n              value={this.state.sourceName}\r\n          />\r\n          <Col span={6}>\r\n            <span>覆盖同名资源</span>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Switch onChange={this.handleCoverSource} />\r\n          </Col>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            {...formItemLayout}\r\n            hasFeedback\r\n            label=\"上传资源包\"\r\n            validateStatus={this.state.sourceStatus}\r\n        >\r\n          <div className=\"dropbox\">\r\n            <Upload.Dragger action=\"/functionSource\"\r\n                name=\"files\"\r\n                onChange={this.handleUpload}\r\n            >\r\n              <p className=\"ant-upload-drag-icon\">\r\n                <Icon type=\"inbox\" />\r\n              </p>\r\n              <p className=\"ant-upload-text\">\r\n                单击或拖动文件到此区域以上载\r\n              </p>\r\n            </Upload.Dragger>\r\n          </div>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={{ span: 7, offset: 8 }}>\r\n          <Button\r\n              htmlType=\"submit\"\r\n              onClick={this.handleSubmit}\r\n              style={{ margin: 10 }}\r\n              type=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n              htmlType=\"reset\"\r\n              onClick={this.handleReset}\r\n              style={{ margin: 10 }}\r\n              type=\"danger\"\r\n          >\r\n            取消\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport RegisteFunction from '../../components/function/RegisteFunction';\r\nimport * as RegisteFunctionActions from '../../redux/actions/RegisteFunctionActions';\r\n\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    submitFunction: functionObj => {\r\n      dispatch(RegisteFunctionActions.submitFunction(functionObj));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisteFunction);\r\n","import * as ActionConstants from '../../constants/ActionConstants';\r\n\r\nexport const submitFunction = functionObj => {\r\n  return {\r\n    type: ActionConstants.SUBMIT_FUNCTION,\r\n    payload: {\r\n      functionObj\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router';\r\nimport { Input, Spin } from 'antd';\r\nimport { Table, Divider, Modal, Tag, Button } from 'antd';\r\n\r\nconst color = 'green';\r\nconst Search = Input.Search;\r\n\r\n/**\r\n * 函数管理组件\r\n */\r\nclass FunctionManager extends React.Component {\r\n  /**\r\n   * 构成组件参数\r\n   */\r\n  static propTypes = {\r\n    functionData: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        functionName: PropTypes.string,\r\n        lastModifier: PropTypes.string,\r\n        lastModified: PropTypes.string,\r\n        resource: PropTypes.string,\r\n        tags: PropTypes.array\r\n      })\r\n    ),\r\n    requestFunctionData: PropTypes.func.isRequired\r\n  };\r\n  static defaultProps = {\r\n    data: []\r\n  };\r\n\r\n  /**\r\n   * @member {number} pageSize 每业数据量\r\n   * @member {boolean} modalVisible\r\n   * @member {string} currentFunc 当前选中函数\r\n   * @param {*} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageSize: 10,\r\n      modalVisible: false,\r\n      function:{},\r\n      currentFunc: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.requestFunctionData();\r\n  }\r\n\r\n  handleClick = () => {\r\n    // this.props.history.push(path);\r\n  };\r\n\r\n  /**\r\n   * 显示模态框函数\r\n   */\r\n  showModal = text => {\r\n    this.setState(\r\n      {\r\n        modalVisible: true,\r\n        function:text\r\n      }\r\n    );\r\n    // this.props.requestFunctionHistory(text.functionName);\r\n  };\r\n\r\n  // 表格列绘制\r\n  columns = [\r\n    {\r\n      title: '函数名称',\r\n      dataIndex: 'functionName',\r\n      key: 'functionName',\r\n      render: functionName => (\r\n        <a onClick={this.handleClick.bind(this, '/function/' + functionName)}>\r\n          {functionName}\r\n        </a>\r\n      )\r\n    },\r\n    {\r\n      title: '更新用户',\r\n      dataIndex: 'lastModifier',\r\n      key: 'lastModifier',\r\n      render: user => (\r\n        <span onClick={this.handleClick.bind(this, '/user/' + user)}>\r\n          {user}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: '更新时间',\r\n      dataIndex: 'lastModified',\r\n      key: 'lastModified'\r\n    },\r\n    {\r\n      title: '资源名称',\r\n      key: 'resource',\r\n      dataIndex: 'resource',\r\n      render: text => (\r\n        <a>\r\n          <Tag color={color}>{text}</Tag>\r\n        </a>\r\n      )\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: text => (\r\n        <span>\r\n          <Button\r\n              ghost\r\n              onClick={this.showModal.bind(this, text)}\r\n              type=\"primary\"\r\n          >\r\n            查看变更历史\r\n          </Button>\r\n          <Divider type=\"vertical\" />\r\n          <Button ghost\r\n              type=\"danger\"\r\n          >\r\n            删除\r\n          </Button>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  /**\r\n   * 渲染组价\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"functionmanager\">\r\n        <Spin spinning={this.props.loadStatus}>\r\n          <Search\r\n              onSearch={value => console.log(value)}\r\n              placeholder=\"输入函数名称搜索\"\r\n              style={{ width: 200 }}\r\n          />\r\n          <Table\r\n              columns={this.columns}\r\n              dataSource={this.props.functionData}\r\n              pagination={{ pageSize: this.state.pageSize }}\r\n          />\r\n          <br />\r\n          <Modal\r\n              footer={null}\r\n              maskClosable\r\n              onCancel={() => {\r\n              this.setState({\r\n                  modalVisible: false\r\n                });\r\n              }}\r\n              title={this.state.function.functionName+'变更历史'}\r\n              visible={this.state.modalVisible}\r\n          >\r\n            <span>modal</span>\r\n            {/* 表格  表头： 时间 更新用户   */}\r\n            {/* {this.props.functionData} */}\r\n          </Modal>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(FunctionManager);\r\n","import { connect } from 'react-redux';\r\nimport ManagerFunction from '../../components/function/ManagerFunction';\r\nimport * as ManagerFunctionActions from '../../redux/actions/ManagerFunctionActions';\r\n\r\nconst mapStateToProps = state => {\r\n  const data = state.ManagerFunctionReducers;\r\n  return {\r\n    loadStatus: data.loadStatus,\r\n    functionData: data.functionData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    requestFunctionData: () =>\r\n      dispatch(ManagerFunctionActions.requestFunctionData())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerFunction);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Tabs, Tree, Spin } from 'antd';\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst DirectoryTree = Tree.DirectoryTree;\r\nconst { TreeNode } = Tree;\r\n\r\n/**\r\n * 数据管理组件\r\n */\r\nexport default class DataManager extends React.Component {\r\n  /**\r\n   * 构成组件参数\r\n   * @param {Array} treeData 数据目录。以树状结构展示\r\n   */\r\n  static propTypes = {\r\n    treeData: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string,\r\n        data: PropTypes.array\r\n      })\r\n    ),\r\n    requestTreeData: PropTypes.func.isRequired\r\n  };\r\n  static defaultProps = {\r\n    treeData: [\r\n      {\r\n        name: '数据目录'\r\n      }\r\n    ]\r\n  };\r\n\r\n  /**\r\n   * @member {string} activeKey 当前选中标签\r\n   * @member {Array} panes 标签页，初始化为空，在点击树之后创建标签页\r\n   * @member {Array} openPanes 标签页，初始化为空，已经打开的标签页，防止标签页重复创建\r\n   * @param {*} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    this.state = {\r\n      activeKey: 'tree',\r\n      panes: [],\r\n      openPanes: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.requestTreeData();\r\n  }\r\n\r\n  /**\r\n   * 生成树组件\r\n   * @param {Object} node\r\n   */\r\n  TreeMap(node) {\r\n    return node.map((subNode, index) => {\r\n      if (!subNode.data) {\r\n        return (\r\n          <TreeNode isLeaf\r\n              key={subNode.name + index}\r\n              title={subNode.name}\r\n          />\r\n        );\r\n      }\r\n      return (\r\n        <TreeNode key={subNode.name + index}\r\n            title={subNode.name}\r\n        >\r\n          {this.TreeMap(subNode.data)}\r\n        </TreeNode>\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 树叶子展开函数\r\n   */\r\n  onExpand = () => {\r\n    console.log('Trigger Expand');\r\n  };\r\n\r\n  /**\r\n   * 标签改变函数\r\n   */\r\n  onChange = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  /**\r\n   * 标签编辑函数，此处无用只是占位\r\n   */\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  /**\r\n   * 搜索函数，搜索相应的数据标签\r\n   */\r\n  onSearch = value => {\r\n    console.log(value);\r\n  };\r\n\r\n  /**\r\n   * 添加标签页函数\r\n   */\r\n  add = (value, e) => {\r\n    if (!e.node.isLeaf()) {\r\n      return;\r\n    }\r\n    const panes = this.state.panes;\r\n    const tab = value[0];\r\n    // 判断标签页是否存在\r\n    const pane = { title: tab, content: 'Content of new Tab' + tab, key: tab };\r\n    if (this.state.openPanes.indexOf(tab) === -1) {\r\n      panes.push(pane);\r\n      this.state.openPanes.push(tab);\r\n    }\r\n    this.setState({ panes, activeKey: tab });\r\n  };\r\n\r\n  /**\r\n   * 删除标签页函数\r\n   */\r\n  remove = targetKey => {\r\n    let activeKey = this.state.activeKey;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.state.openPanes.pop(targetKey);\r\n    this.setState({ panes, activeKey: 'tree' });\r\n  };\r\n\r\n  /**\r\n   * 渲染组件\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"datamanager\">\r\n        <Spin spinning={this.props.loadStatus}>\r\n          <Tabs\r\n              activeKey={this.state.activeKey}\r\n              hideAdd\r\n              onChange={this.onChange}\r\n              onEdit={this.onEdit}\r\n              type=\"editable-card\"\r\n          >\r\n            <TabPane closable={false}\r\n                key=\"tree\"\r\n                tab=\"数据目录\"\r\n            >\r\n              <Input\r\n                  onChange={this.onSearch}\r\n                  placeholder=\"输入名称搜索\"\r\n                  style={{ width: 200 }}\r\n              />\r\n              <br />\r\n              <DirectoryTree\r\n                  autoExpandParent={false}\r\n                  multiple\r\n                  onExpand={this.onExpand}\r\n                  onSelect={this.add}\r\n              >\r\n                {this.TreeMap(this.props.treeData)}\r\n              </DirectoryTree>\r\n            </TabPane>\r\n            {this.state.panes.map(pane => (\r\n              <TabPane closable={pane.closable}\r\n                  key={pane.key}\r\n                  tab={pane.title}\r\n              >\r\n                {pane.content}\r\n              </TabPane>\r\n            ))}\r\n          </Tabs>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport ManagerData from '../../components/data/ManagerData';\r\nimport * as ManagerDataActions from '../../redux/actions/ManagerDataActions';\r\n\r\nconst mapStateToProps = state => {\r\n  const data = state.ManagerDataReducers;\r\n  return {\r\n    loadStatus: data.loadStatus,\r\n    treeData: data.treeData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    requestTreeData: () => dispatch(ManagerDataActions.requestTreeData())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerData);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Divider, Table } from 'antd';\r\nimport * as routerConstants from '../../constants/routerConstants';\r\n\r\nclass ManagerUser extends React.Component {\r\n  static propTypes = {\r\n    data: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string,\r\n        role: PropTypes.string,\r\n        created: PropTypes.string,\r\n        info: PropTypes.string\r\n      })\r\n    ),\r\n    requestUserData: PropTypes.func.isRequired\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: []\r\n  };\r\n\r\n  state = {\r\n    modalVisible: false,\r\n    user: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.requestUserData();\r\n  }\r\n\r\n  handleClick = path => {\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  /**\r\n   * 显示模态框函数\r\n   */\r\n  showModal = text => {\r\n    this.setState({\r\n      modalVisible: true,\r\n      user: text\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '用户名称',\r\n        dataIndex: 'name',\r\n        render: user => (\r\n          <a\r\n              onClick={this.handleClick.bind(\r\n              this,\r\n              routerConstants.USER + '/' + user\r\n            )}\r\n          >\r\n            {user}\r\n          </a>\r\n        )\r\n      },\r\n      {\r\n        title: '用户角色',\r\n        dataIndex: 'role',\r\n        filters: [\r\n          {\r\n            text: '管理员',\r\n            value: 'admin'\r\n          },\r\n          {\r\n            text: '普通用户',\r\n            value: 'user'\r\n          }\r\n        ],\r\n        onFilter: (value, record) => record.role.indexOf(value) === 0\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'created',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.created > b.created ? 1 : -1\r\n      },\r\n      {\r\n        title: () => (\r\n          <div>\r\n            <span>操作</span>\r\n            <Divider type=\"vertical\" />\r\n            <Divider type=\"vertical\" />\r\n            <Divider type=\"vertical\" />\r\n            <Button size=\"small\"\r\n                type=\"default\"\r\n            >\r\n              添加用户\r\n            </Button>\r\n          </div>\r\n        ),\r\n        dataIndex: 'info',\r\n        render: text => (\r\n          <span>\r\n            <Button\r\n                ghost\r\n                onClick={this.showModal.bind(this, text)}\r\n                size=\"small\"\r\n                type=\"primary\"\r\n            >\r\n              修改权限\r\n            </Button>\r\n            {/* <Divider type=\"vertical\" />\r\n            <Button ghost\r\n                size=\"small\"\r\n                type=\"danger\"\r\n            >\r\n              删除\r\n            </Button> */}\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Table\r\n            columns={columns}\r\n            dataSource={this.props.userData}\r\n            loading={this.props.loading}\r\n            pagination={{ pageSize: 10 }}\r\n        />\r\n        <br />\r\n        <Modal\r\n            maskClosable\r\n            onCancel={() => {\r\n            this.setState({\r\n              modalVisible: false\r\n            });\r\n          }}\r\n            onOk={() => {}}\r\n            title={'用户角色权限设置'}\r\n            visible={this.state.modalVisible}\r\n        >\r\n          <span>角色权限设置</span>\r\n          {/* 表格  表头： 时间 更新用户   */}\r\n          {/* {this.props.functionData} */}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ManagerUser);\r\n","import React from 'react';\r\nimport * as routerConstants from '../constants/routerConstants';\r\nimport NewJob from '../containers/job/NewJob';\r\nimport Job from '../containers/job/Job';\r\nimport User from '../components/user/User';\r\nimport Data from '../components/data/Data';\r\nimport Function from '../components/function/Function';\r\nimport ManagerJob from '../containers/job/ManagerJob';\r\nimport RegisteFunction from '../containers/function/RegisteFunction';\r\nimport ManagerFunction from '../containers/function/ManagerFunction';\r\nimport ManagerData from '../containers/data/ManagerData';\r\nimport ManagerUser from '../containers/user/ManagerUser';\r\n\r\n/**\r\n * 侧边栏router\r\n */\r\nexport const sidebarRouterData = [\r\n  {\r\n    key: 'dashboard',\r\n    icon: 'home',\r\n    text: '首页',\r\n    path: routerConstants.Home,\r\n    component: () => <div>主页</div>\r\n  },\r\n  {\r\n    key: 'user',\r\n    icon: 'team',\r\n    text: '用户',\r\n    path: routerConstants.USER_MANAGER,\r\n    component: ManagerUser\r\n  },\r\n  {\r\n    key: 'job',\r\n    icon: 'play-circle',\r\n    text: '任务',\r\n    children: [\r\n      {\r\n        key: 'newJob',\r\n        text: '新建任务',\r\n        path: routerConstants.JOB_NEW,\r\n        component: NewJob\r\n      },\r\n      {\r\n        key: 'currentJob',\r\n        text: '当前任务',\r\n        path: routerConstants.JOB_CURRENT,\r\n        component: Job\r\n      },\r\n      {\r\n        key: 'managerJob',\r\n        text: '管理任务',\r\n        path: routerConstants.JOB_MANAGER,\r\n        component: ManagerJob\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: 'function',\r\n    icon: 'code',\r\n    text: '函数',\r\n    children: [\r\n      {\r\n        key: 'regsiteFunction',\r\n        text: '注册函数',\r\n        path: routerConstants.FUNCTION_NEW,\r\n        component: RegisteFunction\r\n      },\r\n      {\r\n        key: 'managerFunction',\r\n        text: '函数管理',\r\n        path: routerConstants.FUNCTION_MANAGER,\r\n        component: ManagerFunction\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: 'data',\r\n    icon: 'laptop',\r\n    text: '数据',\r\n    path: routerConstants.DATA_MANAGER,\r\n    component: ManagerData\r\n  }\r\n];\r\n\r\n/**主页 */\r\nexport const dashboard = sidebarRouterData[0];\r\n\r\n/**\r\n * 非侧边栏router\r\n */\r\nexport const routerData = [\r\n  {\r\n    /**data 子页面 */\r\n    key: 'dataSubPage',\r\n    path: routerConstants.DATA_DETAIL,\r\n    // eslint-disable-next-line react/no-multi-comp\r\n    component: ({ match }) => {\r\n      return (\r\n        <div>\r\n          <h2>data: {match.params.id}</h2>\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    /**user 子页面 */\r\n    key: 'userSubPage',\r\n    path: routerConstants.USER_DETAIL,\r\n    component: User\r\n  },\r\n  {\r\n    /**function 子页面 */\r\n    key: 'functionSubPage',\r\n    path: routerConstants.FUNCTION_DETAIL,\r\n    component: Function\r\n  },\r\n  {\r\n    /**data 子页面 */\r\n    key: 'dataSubPage',\r\n    path: routerConstants.DATA_DETAIL,\r\n    component: Data\r\n  },\r\n  {\r\n    /**job 子页面 */\r\n    key: 'jobSubPage',\r\n    path: routerConstants.JOB_DETAIL,\r\n    component: Job\r\n  }\r\n];\r\n","import { connect } from 'react-redux';\r\nimport ManagerUser from '../../components/user/ManagerUser';\r\nimport * as ManagerUserActions from '../../redux/actions/ManagerUserActions';\r\n\r\nconst mapStateToProps = state => {\r\n  const data = state.ManagerUserReducers;\r\n  return {\r\n    userData: data.userData,\r\n    loading: data.loadStatus\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    requestUserData: () => dispatch(ManagerUserActions.requestUserData())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ManagerUser);\r\n","import React, { Component } from 'react';\r\nimport Exception from 'ant-design-pro/lib/Exception';\r\n\r\nexport default class NotFoundPage extends Component {\r\n  render() {\r\n    return <Exception backText=\"回到主页\"\r\n        desc=\"哎呀，找不到页面了!\"\r\n        redirect=\"/\"\r\n        type=\"404\"\r\n           />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { sidebarRouterData, dashboard, routerData } from './routerData';\r\nimport NotFoundPage from '../components/Exception/NotFoundPage';\r\nimport { ROOT } from '../constants/routerConstants';\r\n\r\nfunction getRouterComponent(items, compontents) {\r\n  items.forEach(element => {\r\n    if (element.hasOwnProperty('component')) {\r\n      compontents.push(element);\r\n    } else if (element.hasOwnProperty('children')) {\r\n      compontents = Array.from(\r\n        new Set(\r\n          getRouterComponent(element['children'], compontents).concat(\r\n            compontents\r\n          )\r\n        )\r\n      );\r\n    }\r\n  });\r\n  return compontents;\r\n}\r\n\r\nconst sidebarRouterComponents = getRouterComponent(sidebarRouterData, []);\r\nconst otherRouterComponents = getRouterComponent(routerData, []);\r\n\r\n/**\r\n * 递归读取路由\r\n */\r\n\r\nexport default class AppRouter extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route\r\n              exact\r\n              key=\"home\"\r\n              path={ROOT}\r\n              render={() => <Redirect to={dashboard.path} />}\r\n          />\r\n          {sidebarRouterComponents.map(item => (\r\n            <Route\r\n                component={item.component}\r\n                exact\r\n                key={item.key}\r\n                path={item.path}\r\n            />\r\n          ))}\r\n          {otherRouterComponents.map((item,index) =>\r\n            <Route\r\n                component={item.component}\r\n                key={item.key+':'+index}\r\n                path={item.path}\r\n            />\r\n          )}\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PageHeader from 'ant-design-pro/lib/PageHeader';\r\nimport NoticeIcon from 'ant-design-pro/lib/NoticeIcon';\r\nimport NativeIcon from '../icons/NativeIcon';\r\n\r\nexport default class PagesHeader extends React.Component {\r\n  state = { msgCount: 0 }\r\n  render() {\r\n    const title = <span className=\"header-title\">{this.props.title}</span>;\r\n    const action = (\r\n      <div className=\"header-left\" >\r\n        <NoticeIcon className=\"notice\"\r\n            count={this.state.msgCount}\r\n        />\r\n        <NativeIcon className=\"photo\"\r\n            height={35}\r\n            type=\"interesting2\"\r\n            width={35}\r\n        />\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <PageHeader\r\n            action={action}\r\n            className=\"pageheader\"\r\n            logo={\r\n                <NativeIcon className=\"App-logo\"\r\n                    height={30}\r\n                    type=\"spider\"\r\n                    width={30}\r\n                />\r\n            }\r\n            title={title}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport GlobalFooter from 'ant-design-pro/lib/GlobalFooter';\r\nimport { Icon } from 'antd';\r\n\r\nexport default class PageFooter extends React.Component {\r\n  render() {\r\n    const links = [{\r\n      key: '帮助',\r\n      title: '帮助',\r\n      href: 'https://github.com/duiliuliu/simple-spiders-admin'\r\n    }, {\r\n      key: 'github',\r\n      title: <Icon type=\"github\" />,\r\n      href: 'https://github.com/duiliuliu/simple-spiders-admin',\r\n      blankTarget: true\r\n    }];\r\n\r\n    const copyright = <div>Copyright <Icon type=\"copyright\" /> 2018 对六六出品</div>;\r\n    return (\r\n      <div style={{ overflow: 'hidden' }}>\r\n        <div style={{ height: 30 }} />\r\n        <GlobalFooter copyright={copyright}\r\n            links={links}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nconst { Sider } = Layout;\r\nconst { SubMenu, Item } = Menu;\r\nimport { sidebarRouterData } from '../../router/routerData';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedKeys: ['']\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setDefaultActiveItem(this.props);\r\n  };\r\n\r\n  setDefaultActiveItem = ({ location }) => {\r\n    const { pathname } = location;\r\n    sidebarRouterData.map(item => {\r\n      if (item.children && item.children.length > 0) {\r\n        item.children.map(childitem => {\r\n          if (pathname.match(childitem.path)) {\r\n            this.setState({\r\n              openKeys: [item.key],\r\n              selectedKeys: [childitem.key]\r\n            });\r\n            document.title = childitem.text;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { selectedKeys } = this.state;\r\n    const { collapsed } = this.props;\r\n    const SideTree = sidebarRouterData.map(item =>\r\n      item.children\r\n      ? (\r\n        <SubMenu\r\n            key={item.key}\r\n            title={\r\n            <span>\r\n              <Icon type={item.icon} />\r\n              <span>{item.text}</span>\r\n            </span>\r\n          }\r\n        >\r\n        {item.children &&\r\n          item.children.map(menuItem => (\r\n            <Item\r\n                key={menuItem.key}\r\n                onClick={() => {\r\n                this.setState({ selectedKeys: [menuItem.key] });\r\n                document.title = menuItem.text;\r\n              }}\r\n            >\r\n              <Link to={menuItem.path}>{menuItem.text}</Link>\r\n            </Item>\r\n          ))}\r\n      </SubMenu>\r\n      )\r\n      : (\r\n        <Item key={item.key}\r\n            onClick={() => {\r\n              this.setState({ selectedKeys: [item.key] });\r\n              document.title = item.text;\r\n            }}\r\n            title={item.text}\r\n        >\r\n            <Icon type={item.icon} />\r\n            <span>{item.text}</span>\r\n            <Link to={item.path}>{item.text}</Link>\r\n        </Item>\r\n      )\r\n  );\r\n    return (\r\n      <Sider\r\n          breakpoint=\"lg\"\r\n          className=\"SiderBar\"\r\n          collapsed={collapsed}\r\n          style={{width:this.props.width}}\r\n      >\r\n        <Menu\r\n            className=\"menu\"\r\n            mode=\"inline\"\r\n            selectedKeys={selectedKeys}\r\n            style={{ height: '100%', borderRight: 0 }}\r\n            subMenuOpenDelay={0.3}\r\n            theme=\"light\"\r\n        >\r\n          {SideTree}\r\n        </Menu>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst { Item } = Breadcrumb;\r\n\r\nclass MyBreadcrumb extends Component {\r\n  state = {\r\n    items: []\r\n  };\r\n  componentDidMount() {\r\n    this.setDefaultActivePath(this.props);\r\n  }\r\n  setDefaultActivePath = ({ location }) => {\r\n    const { pathname } = location;\r\n    this.setState({\r\n      items:\r\n        pathname &&\r\n        pathname.split('/').map(item => (\r\n          <Item className=\"breadcrumb\"\r\n              key={item}\r\n          >\r\n            {item}\r\n          </Item>\r\n        ))\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Breadcrumb style={{ margin: '8px 0', textAlign: 'left' }}>\r\n        <Breadcrumb.Item>{this.props.action}</Breadcrumb.Item>\r\n        {/* {this.state.items} */}\r\n      </Breadcrumb>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MyBreadcrumb);\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Layout, Icon } from 'antd';\r\nimport AppRouter from '../../router';\r\nimport PagesHeader from '../../components/layout/PageHeader';\r\nimport PagesFooter from '../../components/layout/PageFooter';\r\nimport SideBar from '../../components/layout/SideBar';\r\nimport MyBreadcrumb from '../../components/layout/MyBreadcrumb';\r\n\r\nconst { Content } = Layout;\r\n\r\nclass MyLayout extends React.Component {\r\n  static contextTypes = { router: PropTypes.object };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.resize.bind(this);\r\n    this.state = {\r\n      collapsed: false,\r\n      width: 200\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.resize);\r\n  }\r\n\r\n  resize = () => {\r\n    const width = document.body.offsetWidth;\r\n    if (width < 800 && !this.state.collapsed) {\r\n      this.toggleCollapsed();\r\n    }\r\n  };\r\n\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n      width: this.state.collapsed ? 200 : 55\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter className=\"layout\">\r\n        <Layout>\r\n          <PagesHeader title=\"OpenDataMS\" />\r\n          <Layout>\r\n            <SideBar\r\n                collapsed={this.state.collapsed}\r\n                onCollapsed={this.toggleCollapsed}\r\n                width={this.state.width}\r\n            />\r\n\r\n            <Layout style={{ padding: '0 24px 24px' }}>\r\n              <MyBreadcrumb\r\n                  action={\r\n                  <Icon\r\n                      className=\"collapse\"\r\n                      onClick={this.toggleCollapsed}\r\n                      type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                  />\r\n                }\r\n              />\r\n              <Content\r\n                  className=\"content\"\r\n                  id=\"content\"\r\n                  style={{\r\n                  background: '#fff',\r\n                  padding: 24,\r\n                  margin: 0,\r\n                  minHeight: 200,\r\n                  overflow: 'auto'\r\n                }}\r\n              >\r\n                <AppRouter />\r\n              </Content>\r\n              <PagesFooter />\r\n            </Layout>\r\n          </Layout>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nexport default connect()(MyLayout);\r\n","import React, { Component } from 'react';\r\nimport Login from 'ant-design-pro/lib/Login';\r\nimport { Alert, Checkbox } from 'antd';\r\n\r\nconst { Tab, UserName, Password, Mobile, Captcha, Submit } = Login;\r\n\r\nexport default class MyLogin extends Component {\r\n  state = {\r\n    notice: '',\r\n    type: 'tab2',\r\n    autoLogin: true\r\n  };\r\n  onSubmit = (err, values) => {\r\n    console.log('value collected ->', {\r\n      ...values,\r\n      autoLogin: this.state.autoLogin\r\n    });\r\n    if (this.state.type === 'tab1') {\r\n      this.setState(\r\n        {\r\n          notice: ''\r\n        },\r\n        () => {\r\n          if (\r\n            !err &&\r\n            (values.username !== 'admin' || values.password !== '888888')\r\n          ) {\r\n            setTimeout(() => {\r\n              this.setState({\r\n                notice: 'The combination of username and password is incorrect!'\r\n              });\r\n            }, 500);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n  onTabChange = key => {\r\n    this.setState({\r\n      type: key\r\n    });\r\n  };\r\n  changeAutoLogin = e => {\r\n    this.setState({\r\n      autoLogin: e.target.checked\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Login\r\n          defaultActiveKey={this.state.type}\r\n          onSubmit={this.onSubmit}\r\n          onTabChange={this.onTabChange}\r\n      >\r\n        <Tab key=\"tab1\"\r\n            tab=\"Account\"\r\n        >\r\n          {this.state.notice && (\r\n            <Alert\r\n                closable\r\n                message={this.state.notice}\r\n                showIcon\r\n                style={{ marginBottom: 24 }}\r\n                type=\"error\"\r\n            />\r\n          )}\r\n          <UserName name=\"username\" />\r\n          <Password name=\"password\" />\r\n        </Tab>\r\n        <Tab key=\"tab2\"\r\n            tab=\"Mobile\"\r\n        >\r\n          <Mobile name=\"mobile\" />\r\n          <Captcha\r\n              name=\"captcha\"\r\n              onGetCaptcha={() => console.log('Get captcha!')}\r\n          />\r\n        </Tab>\r\n        <div>\r\n          <Checkbox\r\n              checked={this.state.autoLogin}\r\n              onChange={this.changeAutoLogin}\r\n          >\r\n            Keep me logged in\r\n          </Checkbox>\r\n          <a href=\"\"\r\n              style={{ float: 'right' }}\r\n          >\r\n            Forgot password\r\n          </a>\r\n        </div>\r\n        <Submit>Login</Submit>\r\n        <div>\r\n          Other login methods\r\n          <span className=\"icon icon-alipay\" />\r\n          <span className=\"icon icon-taobao\" />\r\n          <span className=\"icon icon-weibo\" />\r\n          <a href=\"\"\r\n              style={{ float: 'right' }}\r\n          >\r\n            Register\r\n          </a>\r\n        </div>\r\n      </Login>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter,Route,Switch } from 'react-router-dom';\r\nimport configureStore  from './redux/store';\r\nimport rootSaga from './redux/sagas';\r\nimport Layout from './containers/layout/Layout';\r\nimport Login from './components/login/Login';\r\n\r\nimport 'antd/dist/antd.less';\r\nimport 'ant-design-pro/dist/ant-design-pro.css';\r\nimport './assets/style/App.less';\r\n\r\n\r\nconst store = configureStore(window.__INITIAL_STATE__);\r\nstore.runSaga(rootSaga);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route component={Login}\r\n                path=\"/login\"\r\n            />\r\n            <Route path=\"/\"\r\n                render={() =><Layout />}\r\n            />\r\n          </Switch>\r\n        </BrowserRouter>\r\n        {/* <div className=\"App\">\r\n          <Layout />\r\n        </div> */}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware, { END } from 'redux-saga';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './reducer';\r\n\r\nexport default function configureStore(initialState) {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(\r\n        sagaMiddleware, createLogger()\r\n      ),\r\n    )\r\n  );\r\n\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('./reducer', () => {\r\n      const nextRootReducer = require('./reducer').default;\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n  store.runSaga = sagaMiddleware.run;\r\n  store.close = () => store.dispatch(END);\r\n  return store;\r\n}"],"sourceRoot":""}